/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace lasso {

using System;

public class Login : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal Login(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(Login obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  protected Login() : this(IntPtr.Zero, false) {
  }

  ~Login() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      lassoPINVOKE.delete_Login(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public string assertionArtifact {
    get {
      return lassoPINVOKE.get_Login_assertionArtifact(swigCPtr);
    } 
  }

  public LoginProtocolProfile protocolProfile {
    get {
      return (LoginProtocolProfile)lassoPINVOKE.get_Login_protocolProfile(swigCPtr);
    } 
  }

  public Identity identity {
    set {
      lassoPINVOKE.set_Login_identity(swigCPtr, Identity.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Login_identity(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new Identity(cPtr, false);
    } 
  }

  public bool isIdentityDirty {
    get {
      return lassoPINVOKE.get_Login_isIdentityDirty(swigCPtr);
    } 
  }

  public bool isSessionDirty {
    get {
      return lassoPINVOKE.get_Login_isSessionDirty(swigCPtr);
    } 
  }

  public string msgBody {
    get {
      return lassoPINVOKE.get_Login_msgBody(swigCPtr);
    } 
  }

  public string msgRelayState {
    get {
      return lassoPINVOKE.get_Login_msgRelayState(swigCPtr);
    } 
  }

  public string msgUrl {
    get {
      return lassoPINVOKE.get_Login_msgUrl(swigCPtr);
    } 
  }

  public SamlNameIdentifier nameIdentifier {
    set {
      lassoPINVOKE.set_Login_nameIdentifier(swigCPtr, SamlNameIdentifier.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Login_nameIdentifier(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlNameIdentifier(cPtr, false);
    } 
  }

  public string remoteProviderId {
    set {
      lassoPINVOKE.set_Login_remoteProviderId(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_Login_remoteProviderId(swigCPtr);
    } 
  }

  public SamlpRequestAbstract request {
    set {
      lassoPINVOKE.set_Login_request(swigCPtr, SamlpRequestAbstract.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Login_request(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlpRequestAbstract(cPtr, false);
    } 
  }

  public SamlpResponseAbstract response {
    set {
      lassoPINVOKE.set_Login_response(swigCPtr, SamlpResponseAbstract.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Login_response(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlpResponseAbstract(cPtr, false);
    } 
  }

  public Server server {
    set {
      lassoPINVOKE.set_Login_server(swigCPtr, Server.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Login_server(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new Server(cPtr, false);
    } 
  }

  public Session session {
    set {
      lassoPINVOKE.set_Login_session(swigCPtr, Session.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Login_session(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new Session(cPtr, false);
    } 
  }

  public Login(Server server) : this(lassoPINVOKE.new_Login(Server.getCPtr(server)), true) {
  }

  public static Login newFromDump(Server server, string dump) {
    IntPtr cPtr = lassoPINVOKE.Login_newFromDump(Server.getCPtr(server), dump);
    return (cPtr == IntPtr.Zero) ? null : new Login(cPtr, true);
  }

  public int setIdentityFromDump(string dump) {
    return lassoPINVOKE.Login_setIdentityFromDump(swigCPtr, dump);
  }

  public int setSessionFromDump(string dump) {
    return lassoPINVOKE.Login_setSessionFromDump(swigCPtr, dump);
  }

  public int acceptSso() {
    return lassoPINVOKE.Login_acceptSso(swigCPtr);
  }

  public int buildArtifactMsg(HttpMethod httpMethod) {
    return lassoPINVOKE.Login_buildArtifactMsg(swigCPtr, (int)httpMethod);
  }

  public int buildAssertion(string authenticationMethod, string authenticationInstant, string reauthenticateOnOrAfter, string notBefore, string notOnOrAfter) {
    return lassoPINVOKE.Login_buildAssertion(swigCPtr, authenticationMethod, authenticationInstant, reauthenticateOnOrAfter, notBefore, notOnOrAfter);
  }

  public int buildAuthnRequestMsg() {
    return lassoPINVOKE.Login_buildAuthnRequestMsg(swigCPtr);
  }

  public int buildAuthnResponseMsg() {
    return lassoPINVOKE.Login_buildAuthnResponseMsg(swigCPtr);
  }

  public int buildRequestMsg() {
    return lassoPINVOKE.Login_buildRequestMsg(swigCPtr);
  }

  public int buildResponseMsg(string remoteProviderId) {
    return lassoPINVOKE.Login_buildResponseMsg(swigCPtr, remoteProviderId);
  }

  public string dump() {
    return lassoPINVOKE.Login_dump(swigCPtr);
  }

  public int initAuthnRequest(string remoteProviderId, HttpMethod httpMethod) {
    return lassoPINVOKE.Login_initAuthnRequest(swigCPtr, remoteProviderId, (int)httpMethod);
  }

  public int initRequest(string responseMsg, HttpMethod httpMethod) {
    return lassoPINVOKE.Login_initRequest(swigCPtr, responseMsg, (int)httpMethod);
  }

  public int initIdpInitiatedAuthnRequest(string remoteProviderID) {
    return lassoPINVOKE.Login_initIdpInitiatedAuthnRequest(swigCPtr, remoteProviderID);
  }

  public bool mustAskForConsent() {
    return lassoPINVOKE.Login_mustAskForConsent(swigCPtr);
  }

  public bool mustAuthenticate() {
    return lassoPINVOKE.Login_mustAuthenticate(swigCPtr);
  }

  public int processAuthnRequestMsg(string authnrequestMsg) {
    return lassoPINVOKE.Login_processAuthnRequestMsg(swigCPtr, authnrequestMsg);
  }

  public int processAuthnResponseMsg(string authnResponseMsg) {
    return lassoPINVOKE.Login_processAuthnResponseMsg(swigCPtr, authnResponseMsg);
  }

  public int processRequestMsg(string requestMsg) {
    return lassoPINVOKE.Login_processRequestMsg(swigCPtr, requestMsg);
  }

  public int processResponseMsg(string responseMsg) {
    return lassoPINVOKE.Login_processResponseMsg(swigCPtr, responseMsg);
  }

  public int setResourceId(string content) {
    return lassoPINVOKE.Login_setResourceId(swigCPtr, content);
  }

  public int validateRequestMsg(bool authenticationResult, bool isConsentObtained) {
    return lassoPINVOKE.Login_validateRequestMsg(swigCPtr, authenticationResult, isConsentObtained);
  }

}

}
