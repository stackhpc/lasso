/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace lasso {

using System;

public class Lecp : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal Lecp(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(Lecp obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  protected Lecp() : this(IntPtr.Zero, false) {
  }

  ~Lecp() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      lassoPINVOKE.delete_Lecp(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public Identity identity {
    set {
      lassoPINVOKE.set_Lecp_identity(swigCPtr, Identity.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Lecp_identity(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new Identity(cPtr, false);
    } 
  }

  public bool isIdentityDirty {
    get {
      return lassoPINVOKE.get_Lecp_isIdentityDirty(swigCPtr);
    } 
  }

  public bool isSessionDirty {
    get {
      return lassoPINVOKE.get_Lecp_isSessionDirty(swigCPtr);
    } 
  }

  public string msgBody {
    get {
      return lassoPINVOKE.get_Lecp_msgBody(swigCPtr);
    } 
  }

  public string msgRelayState {
    get {
      return lassoPINVOKE.get_Lecp_msgRelayState(swigCPtr);
    } 
  }

  public string msgUrl {
    get {
      return lassoPINVOKE.get_Lecp_msgUrl(swigCPtr);
    } 
  }

  public SamlNameIdentifier nameIdentifier {
    set {
      lassoPINVOKE.set_Lecp_nameIdentifier(swigCPtr, SamlNameIdentifier.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Lecp_nameIdentifier(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlNameIdentifier(cPtr, false);
    } 
  }

  public string remoteProviderId {
    set {
      lassoPINVOKE.set_Lecp_remoteProviderId(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_Lecp_remoteProviderId(swigCPtr);
    } 
  }

  public SamlpRequestAbstract request {
    set {
      lassoPINVOKE.set_Lecp_request(swigCPtr, SamlpRequestAbstract.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Lecp_request(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlpRequestAbstract(cPtr, false);
    } 
  }

  public SamlpResponseAbstract response {
    set {
      lassoPINVOKE.set_Lecp_response(swigCPtr, SamlpResponseAbstract.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Lecp_response(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlpResponseAbstract(cPtr, false);
    } 
  }

  public Server server {
    set {
      lassoPINVOKE.set_Lecp_server(swigCPtr, Server.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Lecp_server(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new Server(cPtr, false);
    } 
  }

  public Session session {
    set {
      lassoPINVOKE.set_Lecp_session(swigCPtr, Session.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_Lecp_session(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new Session(cPtr, false);
    } 
  }

  public Lecp(Server server) : this(lassoPINVOKE.new_Lecp(Server.getCPtr(server)), true) {
  }

  public int setIdentityFromDump(string dump) {
    return lassoPINVOKE.Lecp_setIdentityFromDump(swigCPtr, dump);
  }

  public int setSessionFromDump(string dump) {
    return lassoPINVOKE.Lecp_setSessionFromDump(swigCPtr, dump);
  }

  public int buildAssertion(string authenticationMethod, string authenticationInstant, string reauthenticateOnOrAfter, string notBefore, string notOnOrAfter) {
    return lassoPINVOKE.Lecp_buildAssertion(swigCPtr, authenticationMethod, authenticationInstant, reauthenticateOnOrAfter, notBefore, notOnOrAfter);
  }

  public int setResourceId(string content) {
    return lassoPINVOKE.Lecp_setResourceId(swigCPtr, content);
  }

  public int validateRequestMsg(bool authenticationResult, bool isConsentObtained) {
    return lassoPINVOKE.Lecp_validateRequestMsg(swigCPtr, authenticationResult, isConsentObtained);
  }

  public int buildAuthnRequestEnvelopeMsg() {
    return lassoPINVOKE.Lecp_buildAuthnRequestEnvelopeMsg(swigCPtr);
  }

  public int buildAuthnRequestMsg() {
    return lassoPINVOKE.Lecp_buildAuthnRequestMsg(swigCPtr);
  }

  public int buildAuthnResponseEnvelopeMsg() {
    return lassoPINVOKE.Lecp_buildAuthnResponseEnvelopeMsg(swigCPtr);
  }

  public int buildAuthnResponseMsg() {
    return lassoPINVOKE.Lecp_buildAuthnResponseMsg(swigCPtr);
  }

  public int initAuthnRequest(string remoteProviderId) {
    return lassoPINVOKE.Lecp_initAuthnRequest(swigCPtr, remoteProviderId);
  }

  public int processAuthnRequestEnvelopeMsg(string requestMsg) {
    return lassoPINVOKE.Lecp_processAuthnRequestEnvelopeMsg(swigCPtr, requestMsg);
  }

  public int processAuthnRequestMsg(string authnRequestMsg) {
    return lassoPINVOKE.Lecp_processAuthnRequestMsg(swigCPtr, authnRequestMsg);
  }

  public int processAuthnResponseEnvelopeMsg(string responseMsg) {
    return lassoPINVOKE.Lecp_processAuthnResponseEnvelopeMsg(swigCPtr, responseMsg);
  }

}

}
