/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace lasso {

using System;

public class LibRegisterNameIdentifierRequest : SamlpRequestAbstract, IDisposable {
  internal LibRegisterNameIdentifierRequest(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static IntPtr getCPtr(LibRegisterNameIdentifierRequest obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~LibRegisterNameIdentifierRequest() {
    Dispose();
  }

  public virtual void Dispose() {
  base.Dispose();
}

  public string providerId {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_providerId(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibRegisterNameIdentifierRequest_providerId(swigCPtr);
    } 
  }

  public string relayState {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_relayState(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibRegisterNameIdentifierRequest_relayState(swigCPtr);
    } 
  }

  public string certificateFile {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_certificateFile(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibRegisterNameIdentifierRequest_certificateFile(swigCPtr);
    } 
  }

  public string issueInstant {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_issueInstant(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibRegisterNameIdentifierRequest_issueInstant(swigCPtr);
    } 
  }

  public int majorVersion {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_majorVersion(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibRegisterNameIdentifierRequest_majorVersion(swigCPtr);
    } 
  }

  public int minorVersion {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_minorVersion(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibRegisterNameIdentifierRequest_minorVersion(swigCPtr);
    } 
  }

  public string privateKeyFile {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_privateKeyFile(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibRegisterNameIdentifierRequest_privateKeyFile(swigCPtr);
    } 
  }

  public string requestId {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_requestId(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibRegisterNameIdentifierRequest_requestId(swigCPtr);
    } 
  }

  public StringList respondWith {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_respondWith(swigCPtr, StringList.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibRegisterNameIdentifierRequest_respondWith(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new StringList(cPtr, false);
    } 
  }

  public SignatureMethod signMethod {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_signMethod(swigCPtr, (int)value);
    } 
    get {
      return (SignatureMethod)lassoPINVOKE.get_LibRegisterNameIdentifierRequest_signMethod(swigCPtr);
    } 
  }

  public SWIGTYPE_p_LassoSignatureType signType {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_signType(swigCPtr, SWIGTYPE_p_LassoSignatureType.getCPtr(value));
    } 
    get {
      return new SWIGTYPE_p_LassoSignatureType(lassoPINVOKE.get_LibRegisterNameIdentifierRequest_signType(swigCPtr), true);
    } 
  }

  public StringList extension {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_extension(swigCPtr, StringList.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibRegisterNameIdentifierRequest_extension(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new StringList(cPtr, false);
    } 
  }

  public SamlNameIdentifier idpProvidedNameIdentifier {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_idpProvidedNameIdentifier(swigCPtr, SamlNameIdentifier.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibRegisterNameIdentifierRequest_idpProvidedNameIdentifier(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlNameIdentifier(cPtr, false);
    } 
  }

  public SamlNameIdentifier oldProvidedNameIdentifier {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_oldProvidedNameIdentifier(swigCPtr, SamlNameIdentifier.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibRegisterNameIdentifierRequest_oldProvidedNameIdentifier(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlNameIdentifier(cPtr, false);
    } 
  }

  public SamlNameIdentifier spProvidedNameIdentifier {
    set {
      lassoPINVOKE.set_LibRegisterNameIdentifierRequest_spProvidedNameIdentifier(swigCPtr, SamlNameIdentifier.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibRegisterNameIdentifierRequest_spProvidedNameIdentifier(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlNameIdentifier(cPtr, false);
    } 
  }

  public LibRegisterNameIdentifierRequest() : this(lassoPINVOKE.new_LibRegisterNameIdentifierRequest(), true) {
  }

  public static LibRegisterNameIdentifierRequest newFull(string providerID, SamlNameIdentifier idpNameIdentifier, SamlNameIdentifier spNameIdentifier, SamlNameIdentifier oldNameIdentifier, SWIGTYPE_p_LassoSignatureType sign_type, SignatureMethod sign_method) {
    IntPtr cPtr = lassoPINVOKE.LibRegisterNameIdentifierRequest_newFull(providerID, SamlNameIdentifier.getCPtr(idpNameIdentifier), SamlNameIdentifier.getCPtr(spNameIdentifier), SamlNameIdentifier.getCPtr(oldNameIdentifier), SWIGTYPE_p_LassoSignatureType.getCPtr(sign_type), (int)sign_method);
    return (cPtr == IntPtr.Zero) ? null : new LibRegisterNameIdentifierRequest(cPtr, true);
  }

  public string dump() {
    return lassoPINVOKE.LibRegisterNameIdentifierRequest_dump(swigCPtr);
  }

}

}
