/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace lasso {

using System;

public class SamlpStatus : Node, IDisposable {
  internal SamlpStatus(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static IntPtr getCPtr(SamlpStatus obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~SamlpStatus() {
    Dispose();
  }

  public virtual void Dispose() {
  base.Dispose();
}

  public string statusMessage {
    set {
      lassoPINVOKE.set_SamlpStatus_statusMessage(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_SamlpStatus_statusMessage(swigCPtr);
    } 
  }

  public SamlpStatusCode statusCode {
    set {
      lassoPINVOKE.set_SamlpStatus_statusCode(swigCPtr, SamlpStatusCode.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_SamlpStatus_statusCode(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlpStatusCode(cPtr, false);
    } 
  }

  public SamlpStatus() : this(lassoPINVOKE.new_SamlpStatus(), true) {
  }

  public string dump() {
    return lassoPINVOKE.SamlpStatus_dump(swigCPtr);
  }

}

}
