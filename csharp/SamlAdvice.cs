/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace lasso {

using System;

public class SamlAdvice : Node, IDisposable {
  internal SamlAdvice(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static IntPtr getCPtr(SamlAdvice obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~SamlAdvice() {
    Dispose();
  }

  public virtual void Dispose() {
  base.Dispose();
}

  public SamlAssertion assertion {
    set {
      lassoPINVOKE.set_SamlAdvice_assertion(swigCPtr, SamlAssertion.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_SamlAdvice_assertion(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlAssertion(cPtr, false);
    } 
  }

  public StringList assertionIdReference {
    set {
      lassoPINVOKE.set_SamlAdvice_assertionIdReference(swigCPtr, StringList.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_SamlAdvice_assertionIdReference(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new StringList(cPtr, false);
    } 
  }

  public SamlAdvice() : this(lassoPINVOKE.new_SamlAdvice(), true) {
  }

  public string dump() {
    return lassoPINVOKE.SamlAdvice_dump(swigCPtr);
  }

}

}
