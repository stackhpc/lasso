/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace lasso {

using System;

public class lasso {
  public static DowncastableNode downcast_node(Node node) {
	return lassoPINVOKE.downcast_node(Node.getCPtr(node));
}

  public static int init() {
    return lassoPINVOKE.init();
  }

  public static int shutdown() {
    return lassoPINVOKE.shutdown();
  }

  public static int checkVersion(int major, int minor, int subminor, CheckVersionMode mode) {
    return lassoPINVOKE.checkVersion(major, minor, subminor, (int)mode);
  }

  public static RequestType getRequestTypeFromSoapMsg(string soap) {
    return (RequestType)lassoPINVOKE.getRequestTypeFromSoapMsg(soap);
  }

  public static bool isLibertyQuery(string query) {
    return lassoPINVOKE.isLibertyQuery(query);
  }

  public static readonly int WSF_SUPPORT = lassoPINVOKE.get_WSF_SUPPORT();
  public static readonly string LIB_CONSENT_OBTAINED = lassoPINVOKE.get_LIB_CONSENT_OBTAINED();
  public static readonly string LIB_CONSENT_OBTAINED_PRIOR = lassoPINVOKE.get_LIB_CONSENT_OBTAINED_PRIOR();
  public static readonly string LIB_CONSENT_OBTAINED_CURRENT_IMPLICIT = lassoPINVOKE.get_LIB_CONSENT_OBTAINED_CURRENT_IMPLICIT();
  public static readonly string LIB_CONSENT_OBTAINED_CURRENT_EXPLICIT = lassoPINVOKE.get_LIB_CONSENT_OBTAINED_CURRENT_EXPLICIT();
  public static readonly string LIB_CONSENT_UNAVAILABLE = lassoPINVOKE.get_LIB_CONSENT_UNAVAILABLE();
  public static readonly string LIB_CONSENT_INAPPLICABLE = lassoPINVOKE.get_LIB_CONSENT_INAPPLICABLE();
  public static readonly string LIB_NAMEID_POLICY_TYPE_NONE = lassoPINVOKE.get_LIB_NAMEID_POLICY_TYPE_NONE();
  public static readonly string LIB_NAMEID_POLICY_TYPE_ONE_TIME = lassoPINVOKE.get_LIB_NAMEID_POLICY_TYPE_ONE_TIME();
  public static readonly string LIB_NAMEID_POLICY_TYPE_FEDERATED = lassoPINVOKE.get_LIB_NAMEID_POLICY_TYPE_FEDERATED();
  public static readonly string LIB_NAMEID_POLICY_TYPE_ANY = lassoPINVOKE.get_LIB_NAMEID_POLICY_TYPE_ANY();
  public static readonly string LIB_PROTOCOL_PROFILE_BRWS_ART = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_BRWS_ART();
  public static readonly string LIB_PROTOCOL_PROFILE_BRWS_POST = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_BRWS_POST();
  public static readonly string LIB_PROTOCOL_PROFILE_BRWS_LECP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_BRWS_LECP();
  public static readonly string LIB_PROTOCOL_PROFILE_FED_TERM_IDP_HTTP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_FED_TERM_IDP_HTTP();
  public static readonly string LIB_PROTOCOL_PROFILE_FED_TERM_IDP_SOAP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_FED_TERM_IDP_SOAP();
  public static readonly string LIB_PROTOCOL_PROFILE_FED_TERM_SP_HTTP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_FED_TERM_SP_HTTP();
  public static readonly string LIB_PROTOCOL_PROFILE_FED_TERM_SP_SOAP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_FED_TERM_SP_SOAP();
  public static readonly string LIB_PROTOCOL_PROFILE_RNI_IDP_HTTP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_RNI_IDP_HTTP();
  public static readonly string LIB_PROTOCOL_PROFILE_RNI_IDP_SOAP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_RNI_IDP_SOAP();
  public static readonly string LIB_PROTOCOL_PROFILE_RNI_SP_HTTP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_RNI_SP_HTTP();
  public static readonly string LIB_PROTOCOL_PROFILE_RNI_SP_SOAP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_RNI_SP_SOAP();
  public static readonly string LIB_PROTOCOL_PROFILE_SLO_IDP_HTTP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_SLO_IDP_HTTP();
  public static readonly string LIB_PROTOCOL_PROFILE_SLO_IDP_SOAP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_SLO_IDP_SOAP();
  public static readonly string LIB_PROTOCOL_PROFILE_SLO_SP_HTTP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_SLO_SP_HTTP();
  public static readonly string LIB_PROTOCOL_PROFILE_SLO_SP_SOAP = lassoPINVOKE.get_LIB_PROTOCOL_PROFILE_SLO_SP_SOAP();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_INTERNET_PROTOCOL = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_INTERNET_PROTOCOL();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_INTERNET_PROTOCOL_PASSWORD = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_INTERNET_PROTOCOL_PASSWORD();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_ONE_FACTOR_UNREGISTERED = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_ONE_FACTOR_UNREGISTERED();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_TWO_FACTOR_UNREGISTERED = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_TWO_FACTOR_UNREGISTERED();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_ONE_FACTOR_CONTRACT = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_ONE_FACTOR_CONTRACT();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_TWO_FACTOR_CONTRACT = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_TWO_FACTOR_CONTRACT();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_PASSWORD = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_PASSWORD();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_PASSWORD_PROTECTED_TRANSPORT = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_PASSWORD_PROTECTED_TRANSPORT();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_PREVIOUS_SESSION = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_PREVIOUS_SESSION();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_SMARTCARD = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_SMARTCARD();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_SMARTCARD_PKI = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_SMARTCARD_PKI();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_SOFTWARE_PKI = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_SOFTWARE_PKI();
  public static readonly string LIB_AUTHN_CONTEXT_CLASS_REF_TIME_SYNC_TOKEN = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_CLASS_REF_TIME_SYNC_TOKEN();
  public static readonly string LIB_AUTHN_CONTEXT_COMPARISON_EXACT = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_COMPARISON_EXACT();
  public static readonly string LIB_AUTHN_CONTEXT_COMPARISON_MINIMUM = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_COMPARISON_MINIMUM();
  public static readonly string LIB_AUTHN_CONTEXT_COMPARISON_MAXIMUM = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_COMPARISON_MAXIMUM();
  public static readonly string LIB_AUTHN_CONTEXT_COMPARISON_BETTER = lassoPINVOKE.get_LIB_AUTHN_CONTEXT_COMPARISON_BETTER();
  public static readonly string SAML_AUTHENTICATION_METHOD_PASSWORD = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_PASSWORD();
  public static readonly string SAML_AUTHENTICATION_METHOD_KERBEROS = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_KERBEROS();
  public static readonly string SAML_AUTHENTICATION_METHOD_SECURE_REMOTE_PASSWORD = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_SECURE_REMOTE_PASSWORD();
  public static readonly string SAML_AUTHENTICATION_METHOD_HARDWARE_TOKEN = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_HARDWARE_TOKEN();
  public static readonly string SAML_AUTHENTICATION_METHOD_SMARTCARD_PKI = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_SMARTCARD_PKI();
  public static readonly string SAML_AUTHENTICATION_METHOD_SOFTWARE_PKI = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_SOFTWARE_PKI();
  public static readonly string SAML_AUTHENTICATION_METHOD_PGP = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_PGP();
  public static readonly string SAML_AUTHENTICATION_METHODS_PKI = lassoPINVOKE.get_SAML_AUTHENTICATION_METHODS_PKI();
  public static readonly string SAML_AUTHENTICATION_METHOD_XKMS = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_XKMS();
  public static readonly string SAML_AUTHENTICATION_METHOD_XMLD_SIG = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_XMLD_SIG();
  public static readonly string SAML_AUTHENTICATION_METHOD_UNSPECIFIED = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_UNSPECIFIED();
  public static readonly string SAML_AUTHENTICATION_METHOD_LIBERTY = lassoPINVOKE.get_SAML_AUTHENTICATION_METHOD_LIBERTY();
  public static readonly int ERROR_UNDEFINED = lassoPINVOKE.get_ERROR_UNDEFINED();
  public static readonly int XML_ERROR_NODE_NOT_FOUND = lassoPINVOKE.get_XML_ERROR_NODE_NOT_FOUND();
  public static readonly int XML_ERROR_NODE_CONTENT_NOT_FOUND = lassoPINVOKE.get_XML_ERROR_NODE_CONTENT_NOT_FOUND();
  public static readonly int XML_ERROR_ATTR_NOT_FOUND = lassoPINVOKE.get_XML_ERROR_ATTR_NOT_FOUND();
  public static readonly int XML_ERROR_ATTR_VALUE_NOT_FOUND = lassoPINVOKE.get_XML_ERROR_ATTR_VALUE_NOT_FOUND();
  public static readonly int DS_ERROR_SIGNATURE_NOT_FOUND = lassoPINVOKE.get_DS_ERROR_SIGNATURE_NOT_FOUND();
  public static readonly int DS_ERROR_INVALID_SIGNATURE = lassoPINVOKE.get_DS_ERROR_INVALID_SIGNATURE();
  public static readonly int DS_ERROR_SIGNATURE_TMPL_CREATION_FAILED = lassoPINVOKE.get_DS_ERROR_SIGNATURE_TMPL_CREATION_FAILED();
  public static readonly int DS_ERROR_CONTEXT_CREATION_FAILED = lassoPINVOKE.get_DS_ERROR_CONTEXT_CREATION_FAILED();
  public static readonly int DS_ERROR_PUBLIC_KEY_LOAD_FAILED = lassoPINVOKE.get_DS_ERROR_PUBLIC_KEY_LOAD_FAILED();
  public static readonly int DS_ERROR_PRIVATE_KEY_LOAD_FAILED = lassoPINVOKE.get_DS_ERROR_PRIVATE_KEY_LOAD_FAILED();
  public static readonly int DS_ERROR_CERTIFICATE_LOAD_FAILED = lassoPINVOKE.get_DS_ERROR_CERTIFICATE_LOAD_FAILED();
  public static readonly int DS_ERROR_SIGNATURE_FAILED = lassoPINVOKE.get_DS_ERROR_SIGNATURE_FAILED();
  public static readonly int DS_ERROR_KEYS_MNGR_CREATION_FAILED = lassoPINVOKE.get_DS_ERROR_KEYS_MNGR_CREATION_FAILED();
  public static readonly int DS_ERROR_KEYS_MNGR_INIT_FAILED = lassoPINVOKE.get_DS_ERROR_KEYS_MNGR_INIT_FAILED();
  public static readonly int DS_ERROR_SIGNATURE_VERIFICATION_FAILED = lassoPINVOKE.get_DS_ERROR_SIGNATURE_VERIFICATION_FAILED();
  public static readonly int DS_ERROR_CA_CERT_CHAIN_LOAD_FAILED = lassoPINVOKE.get_DS_ERROR_CA_CERT_CHAIN_LOAD_FAILED();
  public static readonly int DS_ERROR_INVALID_SIGALG = lassoPINVOKE.get_DS_ERROR_INVALID_SIGALG();
  public static readonly int DS_ERROR_DIGEST_COMPUTE_FAILED = lassoPINVOKE.get_DS_ERROR_DIGEST_COMPUTE_FAILED();
  public static readonly int LASSO_DS_ERROR_SIGNATURE_TEMPLATE_NOT_FOUND = lassoPINVOKE.get_LASSO_DS_ERROR_SIGNATURE_TEMPLATE_NOT_FOUND();
  public static readonly int SERVER_ERROR_PROVIDER_NOT_FOUND = lassoPINVOKE.get_SERVER_ERROR_PROVIDER_NOT_FOUND();
  public static readonly int SERVER_ERROR_ADD_PROVIDER_FAILED = lassoPINVOKE.get_SERVER_ERROR_ADD_PROVIDER_FAILED();
  public static readonly int LOGOUT_ERROR_UNSUPPORTED_PROFILE = lassoPINVOKE.get_LOGOUT_ERROR_UNSUPPORTED_PROFILE();
  public static readonly int PROFILE_ERROR_INVALID_QUERY = lassoPINVOKE.get_PROFILE_ERROR_INVALID_QUERY();
  public static readonly int PROFILE_ERROR_INVALID_POST_MSG = lassoPINVOKE.get_PROFILE_ERROR_INVALID_POST_MSG();
  public static readonly int PROFILE_ERROR_INVALID_SOAP_MSG = lassoPINVOKE.get_PROFILE_ERROR_INVALID_SOAP_MSG();
  public static readonly int PROFILE_ERROR_MISSING_REQUEST = lassoPINVOKE.get_PROFILE_ERROR_MISSING_REQUEST();
  public static readonly int PROFILE_ERROR_INVALID_HTTP_METHOD = lassoPINVOKE.get_PROFILE_ERROR_INVALID_HTTP_METHOD();
  public static readonly int PROFILE_ERROR_INVALID_PROTOCOLPROFILE = lassoPINVOKE.get_PROFILE_ERROR_INVALID_PROTOCOLPROFILE();
  public static readonly int PROFILE_ERROR_INVALID_MSG = lassoPINVOKE.get_PROFILE_ERROR_INVALID_MSG();
  public static readonly int PROFILE_ERROR_MISSING_REMOTE_PROVIDERID = lassoPINVOKE.get_PROFILE_ERROR_MISSING_REMOTE_PROVIDERID();
  public static readonly int PROFILE_ERROR_UNSUPPORTED_PROFILE = lassoPINVOKE.get_PROFILE_ERROR_UNSUPPORTED_PROFILE();
  public static readonly int PROFILE_ERROR_UNKNOWN_PROFILE_URL = lassoPINVOKE.get_PROFILE_ERROR_UNKNOWN_PROFILE_URL();
  public static readonly int PROFILE_ERROR_IDENTITY_NOT_FOUND = lassoPINVOKE.get_PROFILE_ERROR_IDENTITY_NOT_FOUND();
  public static readonly int PROFILE_ERROR_FEDERATION_NOT_FOUND = lassoPINVOKE.get_PROFILE_ERROR_FEDERATION_NOT_FOUND();
  public static readonly int PROFILE_ERROR_NAME_IDENTIFIER_NOT_FOUND = lassoPINVOKE.get_PROFILE_ERROR_NAME_IDENTIFIER_NOT_FOUND();
  public static readonly int PROFILE_ERROR_BUILDING_QUERY_FAILED = lassoPINVOKE.get_PROFILE_ERROR_BUILDING_QUERY_FAILED();
  public static readonly int PROFILE_ERROR_BUILDING_REQUEST_FAILED = lassoPINVOKE.get_PROFILE_ERROR_BUILDING_REQUEST_FAILED();
  public static readonly int PROFILE_ERROR_BUILDING_MESSAGE_FAILED = lassoPINVOKE.get_PROFILE_ERROR_BUILDING_MESSAGE_FAILED();
  public static readonly int PROFILE_ERROR_BUILDING_RESPONSE_FAILED = lassoPINVOKE.get_PROFILE_ERROR_BUILDING_RESPONSE_FAILED();
  public static readonly int PROFILE_ERROR_SESSION_NOT_FOUND = lassoPINVOKE.get_PROFILE_ERROR_SESSION_NOT_FOUND();
  public static readonly int PROFILE_ERROR_BAD_IDENTITY_DUMP = lassoPINVOKE.get_PROFILE_ERROR_BAD_IDENTITY_DUMP();
  public static readonly int PROFILE_ERROR_BAD_SESSION_DUMP = lassoPINVOKE.get_PROFILE_ERROR_BAD_SESSION_DUMP();
  public static readonly int LASSO_PARAM_ERROR_BAD_TYPE_OR_NULL_OBJ = lassoPINVOKE.get_LASSO_PARAM_ERROR_BAD_TYPE_OR_NULL_OBJ();
  public static readonly int PARAM_ERROR_INVALID_VALUE = lassoPINVOKE.get_PARAM_ERROR_INVALID_VALUE();
  public static readonly int LASSO_PARAM_ERROR_CHECK_FAILED = lassoPINVOKE.get_LASSO_PARAM_ERROR_CHECK_FAILED();
  public static readonly int LOGIN_ERROR_FEDERATION_NOT_FOUND = lassoPINVOKE.get_LOGIN_ERROR_FEDERATION_NOT_FOUND();
  public static readonly int LOGIN_ERROR_CONSENT_NOT_OBTAINED = lassoPINVOKE.get_LOGIN_ERROR_CONSENT_NOT_OBTAINED();
  public static readonly int LASSO_LOGIN_ERROR_INVALID_NAMEIDPOLICY = lassoPINVOKE.get_LASSO_LOGIN_ERROR_INVALID_NAMEIDPOLICY();
  public static readonly int LASSO_LOGIN_ERROR_REQUEST_DENIED = lassoPINVOKE.get_LASSO_LOGIN_ERROR_REQUEST_DENIED();
  public static readonly int LOGIN_ERROR_INVALID_SIGNATURE = lassoPINVOKE.get_LOGIN_ERROR_INVALID_SIGNATURE();
  public static readonly int LOGIN_ERROR_UNSIGNED_AUTHN_REQUEST = lassoPINVOKE.get_LOGIN_ERROR_UNSIGNED_AUTHN_REQUEST();
  public static readonly int LOGIN_ERROR_STATUS_NOT_SUCCESS = lassoPINVOKE.get_LOGIN_ERROR_STATUS_NOT_SUCCESS();
  public static readonly int DEFEDERATION_ERROR_MISSING_NAME_IDENTIFIER = lassoPINVOKE.get_DEFEDERATION_ERROR_MISSING_NAME_IDENTIFIER();
}

}
