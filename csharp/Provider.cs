/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace lasso {

using System;

public class Provider : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal Provider(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(Provider obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  protected Provider() : this(IntPtr.Zero, false) {
  }

  ~Provider() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      lassoPINVOKE.delete_Provider(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public string caCertChain {
    set {
      lassoPINVOKE.set_Provider_caCertChain(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_Provider_caCertChain(swigCPtr);
    } 
  }

  public string metadataFilename {
    set {
      lassoPINVOKE.set_Provider_metadataFilename(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_Provider_metadataFilename(swigCPtr);
    } 
  }

  public string providerId {
    set {
      lassoPINVOKE.set_Provider_providerId(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_Provider_providerId(swigCPtr);
    } 
  }

  public string publicKey {
    set {
      lassoPINVOKE.set_Provider_publicKey(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_Provider_publicKey(swigCPtr);
    } 
  }

  public ProviderRole role {
    set {
      lassoPINVOKE.set_Provider_role(swigCPtr, (int)value);
    } 
    get {
      return (ProviderRole)lassoPINVOKE.get_Provider_role(swigCPtr);
    } 
  }

  public Provider(ProviderRole role, string metadata, string public_key, string ca_cert_chain) : this(lassoPINVOKE.new_Provider((int)role, metadata, public_key, ca_cert_chain), true) {
  }

  public static Provider newFromDump(string dump) {
    IntPtr cPtr = lassoPINVOKE.Provider_newFromDump(dump);
    return (cPtr == IntPtr.Zero) ? null : new Provider(cPtr, true);
  }

  public string dump() {
    return lassoPINVOKE.Provider_dump(swigCPtr);
  }

  public bool acceptHttpMethod(Provider remote_provider, SWIGTYPE_p_LassoMdProtocolType protocol_type, HttpMethod http_method, bool initiate_profile) {
    return lassoPINVOKE.Provider_acceptHttpMethod(swigCPtr, Provider.getCPtr(remote_provider), SWIGTYPE_p_LassoMdProtocolType.getCPtr(protocol_type), (int)http_method, initiate_profile);
  }

  public string getAssertionConsumerServiceUrl(string service_id) {
    return lassoPINVOKE.Provider_getAssertionConsumerServiceUrl(swigCPtr, service_id);
  }

  public string getBase64SuccinctId() {
    return lassoPINVOKE.Provider_getBase64SuccinctId(swigCPtr);
  }

  public string getOrganization() {
    return lassoPINVOKE.Provider_getOrganization(swigCPtr);
  }

  public HttpMethod getFirstHttpMethod(Provider remote_provider, SWIGTYPE_p_LassoMdProtocolType protocol_type) {
    return (HttpMethod)lassoPINVOKE.Provider_getFirstHttpMethod(swigCPtr, Provider.getCPtr(remote_provider), SWIGTYPE_p_LassoMdProtocolType.getCPtr(protocol_type));
  }

  public string getMetadataOne(string name) {
    return lassoPINVOKE.Provider_getMetadataOne(swigCPtr, name);
  }

  public bool hasProtocolProfile(SWIGTYPE_p_LassoMdProtocolType protocol_type, string protocol_profile) {
    return lassoPINVOKE.Provider_hasProtocolProfile(swigCPtr, SWIGTYPE_p_LassoMdProtocolType.getCPtr(protocol_type), protocol_profile);
  }

}

}
