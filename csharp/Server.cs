/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.21
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

//package lasso;

using System;
public class Server : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal Server(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected Server() : this(IntPtr.Zero, false) {
  }

  ~Server() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      lassoPINVOKE.delete_Server(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  internal static IntPtr getCPtr(Server obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  public string providerId {
    get {
      return lassoPINVOKE.get_Server_providerId(swigCPtr);
    } 
  }

  public Server(string metadata, string publicKey, string privateKey, string certificate, int signatureMethod) : this(lassoPINVOKE.new_Server(metadata, publicKey, privateKey, certificate, signatureMethod), true) {
  }

  public static Server newFromDump(string dump) {
    IntPtr cPtr = lassoPINVOKE.Server_newFromDump(dump);
    return (cPtr == IntPtr.Zero) ? null : new Server(cPtr, true);
  }

  public void addProvider(string metadata, string publicKey, string caCertificate) {
    lassoPINVOKE.Server_addProvider(swigCPtr, metadata, publicKey, caCertificate);
  }

  public string dump() {
    return lassoPINVOKE.Server_dump(swigCPtr);
  }

}
