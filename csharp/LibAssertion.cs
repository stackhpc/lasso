/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace lasso {

using System;

public class LibAssertion : SamlAssertion, IDisposable {
  internal LibAssertion(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static IntPtr getCPtr(LibAssertion obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~LibAssertion() {
    Dispose();
  }

  public virtual void Dispose() {
  base.Dispose();
}

  public SamlAdvice advice {
    set {
      lassoPINVOKE.set_LibAssertion_advice(swigCPtr, SamlAdvice.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibAssertion_advice(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlAdvice(cPtr, false);
    } 
  }

  public string assertionId {
    set {
      lassoPINVOKE.set_LibAssertion_assertionId(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibAssertion_assertionId(swigCPtr);
    } 
  }

  public SamlAttributeStatement attributeStatement {
    set {
      lassoPINVOKE.set_LibAssertion_attributeStatement(swigCPtr, SamlAttributeStatement.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibAssertion_attributeStatement(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlAttributeStatement(cPtr, false);
    } 
  }

  public SamlAuthenticationStatement authenticationStatement {
    set {
      lassoPINVOKE.set_LibAssertion_authenticationStatement(swigCPtr, SamlAuthenticationStatement.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibAssertion_authenticationStatement(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlAuthenticationStatement(cPtr, false);
    } 
  }

  public string certificateFile {
    set {
      lassoPINVOKE.set_LibAssertion_certificateFile(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibAssertion_certificateFile(swigCPtr);
    } 
  }

  public SamlConditions conditions {
    set {
      lassoPINVOKE.set_LibAssertion_conditions(swigCPtr, SamlConditions.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibAssertion_conditions(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlConditions(cPtr, false);
    } 
  }

  public string issueInstant {
    set {
      lassoPINVOKE.set_LibAssertion_issueInstant(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibAssertion_issueInstant(swigCPtr);
    } 
  }

  public string issuer {
    set {
      lassoPINVOKE.set_LibAssertion_issuer(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibAssertion_issuer(swigCPtr);
    } 
  }

  public int majorVersion {
    set {
      lassoPINVOKE.set_LibAssertion_majorVersion(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibAssertion_majorVersion(swigCPtr);
    } 
  }

  public int minorVersion {
    set {
      lassoPINVOKE.set_LibAssertion_minorVersion(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibAssertion_minorVersion(swigCPtr);
    } 
  }

  public string privateKeyFile {
    set {
      lassoPINVOKE.set_LibAssertion_privateKeyFile(swigCPtr, value);
    } 
    get {
      return lassoPINVOKE.get_LibAssertion_privateKeyFile(swigCPtr);
    } 
  }

  public SignatureMethod signMethod {
    set {
      lassoPINVOKE.set_LibAssertion_signMethod(swigCPtr, (int)value);
    } 
    get {
      return (SignatureMethod)lassoPINVOKE.get_LibAssertion_signMethod(swigCPtr);
    } 
  }

  public SWIGTYPE_p_LassoSignatureType signType {
    set {
      lassoPINVOKE.set_LibAssertion_signType(swigCPtr, SWIGTYPE_p_LassoSignatureType.getCPtr(value));
    } 
    get {
      return new SWIGTYPE_p_LassoSignatureType(lassoPINVOKE.get_LibAssertion_signType(swigCPtr), true);
    } 
  }

  public SamlSubjectStatement subjectStatement {
    set {
      lassoPINVOKE.set_LibAssertion_subjectStatement(swigCPtr, SamlSubjectStatement.getCPtr(value));
    } 
    get {
      IntPtr cPtr = lassoPINVOKE.get_LibAssertion_subjectStatement(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new SamlSubjectStatement(cPtr, false);
    } 
  }

  public LibAssertion() : this(lassoPINVOKE.new_LibAssertion(), true) {
  }

  public static LibAssertion newFull(string issuer, string requestId, string audience, string notBefore, string notOnOrAfter) {
    IntPtr cPtr = lassoPINVOKE.LibAssertion_newFull(issuer, requestId, audience, notBefore, notOnOrAfter);
    return (cPtr == IntPtr.Zero) ? null : new LibAssertion(cPtr, true);
  }

  public string dump() {
    return lassoPINVOKE.LibAssertion_dump(swigCPtr);
  }

}

}
