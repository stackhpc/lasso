/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.entrouvert.lasso;

public class LibAssertion extends SamlAssertion {
  protected LibAssertion(long cPtr, boolean cMemoryOwn) {
    super(cPtr, cMemoryOwn);
  }

  protected static long getCPtr(LibAssertion obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
  super.delete();
}

  public void setAdvice(SamlAdvice Advice) {
    lassoJNI.set_LibAssertion_advice(swigCPtr, SamlAdvice.getCPtr(Advice));
  }

  public SamlAdvice getAdvice() {
    long cPtr = lassoJNI.get_LibAssertion_advice(swigCPtr);
    return (cPtr == 0) ? null : new SamlAdvice(cPtr, false);
  }

  public void setAssertionId(String AssertionID) {
    lassoJNI.set_LibAssertion_assertionId(swigCPtr, AssertionID);
  }

  public String getAssertionId() {
    return lassoJNI.get_LibAssertion_assertionId(swigCPtr);
  }

  public void setAttributeStatement(SamlAttributeStatement AttributeStatement) {
    lassoJNI.set_LibAssertion_attributeStatement(swigCPtr, SamlAttributeStatement.getCPtr(AttributeStatement));
  }

  public SamlAttributeStatement getAttributeStatement() {
    long cPtr = lassoJNI.get_LibAssertion_attributeStatement(swigCPtr);
    return (cPtr == 0) ? null : new SamlAttributeStatement(cPtr, false);
  }

  public void setAuthenticationStatement(SamlAuthenticationStatement AuthenticationStatement) {
    lassoJNI.set_LibAssertion_authenticationStatement(swigCPtr, SamlAuthenticationStatement.getCPtr(AuthenticationStatement));
  }

  public SamlAuthenticationStatement getAuthenticationStatement() {
    long cPtr = lassoJNI.get_LibAssertion_authenticationStatement(swigCPtr);
    return (cPtr == 0) ? null : new SamlAuthenticationStatement(cPtr, false);
  }

  public void setCertificateFile(String certificate_file) {
    lassoJNI.set_LibAssertion_certificateFile(swigCPtr, certificate_file);
  }

  public String getCertificateFile() {
    return lassoJNI.get_LibAssertion_certificateFile(swigCPtr);
  }

  public void setConditions(SamlConditions Conditions) {
    lassoJNI.set_LibAssertion_conditions(swigCPtr, SamlConditions.getCPtr(Conditions));
  }

  public SamlConditions getConditions() {
    long cPtr = lassoJNI.get_LibAssertion_conditions(swigCPtr);
    return (cPtr == 0) ? null : new SamlConditions(cPtr, false);
  }

  public void setIssueInstant(String IssueInstant) {
    lassoJNI.set_LibAssertion_issueInstant(swigCPtr, IssueInstant);
  }

  public String getIssueInstant() {
    return lassoJNI.get_LibAssertion_issueInstant(swigCPtr);
  }

  public void setIssuer(String Issuer) {
    lassoJNI.set_LibAssertion_issuer(swigCPtr, Issuer);
  }

  public String getIssuer() {
    return lassoJNI.get_LibAssertion_issuer(swigCPtr);
  }

  public void setMajorVersion(int MajorVersion) {
    lassoJNI.set_LibAssertion_majorVersion(swigCPtr, MajorVersion);
  }

  public int getMajorVersion() {
    return lassoJNI.get_LibAssertion_majorVersion(swigCPtr);
  }

  public void setMinorVersion(int MinorVersion) {
    lassoJNI.set_LibAssertion_minorVersion(swigCPtr, MinorVersion);
  }

  public int getMinorVersion() {
    return lassoJNI.get_LibAssertion_minorVersion(swigCPtr);
  }

  public void setPrivateKeyFile(String private_key_file) {
    lassoJNI.set_LibAssertion_privateKeyFile(swigCPtr, private_key_file);
  }

  public String getPrivateKeyFile() {
    return lassoJNI.get_LibAssertion_privateKeyFile(swigCPtr);
  }

  public void setSignMethod(int sign_method) {
    lassoJNI.set_LibAssertion_signMethod(swigCPtr, sign_method);
  }

  public int getSignMethod() {
    return lassoJNI.get_LibAssertion_signMethod(swigCPtr);
  }

  public void setSignType(SWIGTYPE_p_LassoSignatureType sign_type) {
    lassoJNI.set_LibAssertion_signType(swigCPtr, SWIGTYPE_p_LassoSignatureType.getCPtr(sign_type));
  }

  public SWIGTYPE_p_LassoSignatureType getSignType() {
    return new SWIGTYPE_p_LassoSignatureType(lassoJNI.get_LibAssertion_signType(swigCPtr), true);
  }

  public void setSubjectStatement(SamlSubjectStatement SubjectStatement) {
    lassoJNI.set_LibAssertion_subjectStatement(swigCPtr, SamlSubjectStatement.getCPtr(SubjectStatement));
  }

  public SamlSubjectStatement getSubjectStatement() {
    long cPtr = lassoJNI.get_LibAssertion_subjectStatement(swigCPtr);
    return (cPtr == 0) ? null : new SamlSubjectStatement(cPtr, false);
  }

  public LibAssertion() {
    this(lassoJNI.new_LibAssertion(), true);
  }

  public static LibAssertion newFull(String issuer, String requestId, String audience, String notBefore, String notOnOrAfter) {
    long cPtr = lassoJNI.LibAssertion_newFull(issuer, requestId, audience, notBefore, notOnOrAfter);
    return (cPtr == 0) ? null : new LibAssertion(cPtr, true);
  }

  public String dump() {
    return lassoJNI.LibAssertion_dump(swigCPtr);
  }

}
