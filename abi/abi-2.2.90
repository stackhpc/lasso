LASSO_ASSERTION_QUERY_REQUEST_TYPE_ASSERTION_ID
LASSO_ASSERTION_QUERY_REQUEST_TYPE_ATTRIBUTE
LASSO_ASSERTION_QUERY_REQUEST_TYPE_AUTHN
LASSO_ASSERTION_QUERY_REQUEST_TYPE_AUTHZ_DECISION
LASSO_ASSERTION_QUERY_REQUEST_TYPE_UNSET
LASSO_CHECK_VERSIONABI_COMPATIBLE
LASSO_CHECK_VERSION_EXACT
LASSO_CHECK_VERSION_NUMERIC
LASSO_DATA_SERVICE_ERROR_CANNOT_ADD_ITEM
LASSO_DATA_SERVICE_ERROR_UNREGISTERED_DST
LASSO_DEFEDERATION_ERROR_MISSING_NAME_IDENTIFIER
LASSO_DISCOVERY_ERROR_FAILED_TO_BUILD_ENDPOINT_REFERENCE
LASSO_DISCOVERY_ERROR_MISSING_REQUESTED_SERVICE
LASSO_DISCOVERY_ERROR_SVC_METADATA_ASSOCIATION_ADD_FAILED
LASSO_DISCOVERY_ERROR_SVC_METADATA_REGISTER_FAILED
LASSO_DST_ERROR_EMPTY_REQUEST
LASSO_DST_ERROR_MALFORMED_QUERY
LASSO_DST_ERROR_MISSING_SERVICE_DATA
LASSO_DST_ERROR_MODIFY_FAILED
LASSO_DST_ERROR_MODIFY_PARTIALLY_FAILED
LASSO_DST_ERROR_NEW_DATA_MISSING
LASSO_DST_ERROR_NO_DATA
LASSO_DST_ERROR_QUERY_FAILED
LASSO_DST_ERROR_QUERY_NOT_FOUND
LASSO_DST_ERROR_QUERY_PARTIALLY_FAILED
LASSO_DS_ERROR_CA_CERT_CHAIN_LOAD_FAILED
LASSO_DS_ERROR_CERTIFICATE_LOAD_FAILED
LASSO_DS_ERROR_CONTEXT_CREATION_FAILED
LASSO_DS_ERROR_DECRYPTION_FAILED
LASSO_DS_ERROR_DIGEST_COMPUTE_FAILED
LASSO_DS_ERROR_ENCRYPTION_FAILED
LASSO_DS_ERROR_INVALID_REFERENCE_FOR_SAML
LASSO_DS_ERROR_INVALID_SIGALG
LASSO_DS_ERROR_INVALID_SIGNATURE
LASSO_DS_ERROR_KEYS_MNGR_CREATION_FAILED
LASSO_DS_ERROR_KEYS_MNGR_INIT_FAILED
LASSO_DS_ERROR_PRIVATE_KEY_LOAD_FAILED
LASSO_DS_ERROR_PUBLIC_KEY_LOAD_FAILED
LASSO_DS_ERROR_SIGNATURE_FAILED
LASSO_DS_ERROR_SIGNATURE_NOT_FOUND
LASSO_DS_ERROR_SIGNATURE_TEMPLATE_NOT_FOUND
LASSO_DS_ERROR_SIGNATURE_TMPL_CREATION_FAILED
LASSO_DS_ERROR_SIGNATURE_VERIFICATION_FAILED
LASSO_DS_ERROR_TOO_MUCH_REFERENCES
LASSO_DS_HREF
LASSO_DS_PREFIX
LASSO_DURATION_DAY
LASSO_DURATION_HOUR
LASSO_DURATION_MINUTE
LASSO_DURATION_WEEK
LASSO_ECP_HREF
LASSO_ECP_PREFIX
LASSO_ENCRYPTION_MODE_ASSERTION
LASSO_ENCRYPTION_MODE_NAMEID
LASSO_ENCRYPTION_MODE_NONE
LASSO_ENCRYPTION_SYM_KEY_TYPE_3DES
LASSO_ENCRYPTION_SYM_KEY_TYPE_AES_128
LASSO_ENCRYPTION_SYM_KEY_TYPE_AES_256
LASSO_ENCRYPTION_SYM_KEY_TYPE_DEFAULT
LASSO_ERROR_CAST_FAILED
LASSO_ERROR_OUT_OF_MEMORY
LASSO_ERROR_UNDEFINED
LASSO_ERROR_UNIMPLEMENTED
LASSO_HTTP_METHOD_ANY
LASSO_HTTP_METHOD_ARTIFACT_GET
LASSO_HTTP_METHOD_ARTIFACT_POST
LASSO_HTTP_METHOD_GET
LASSO_HTTP_METHOD_IDP_INITIATED
LASSO_HTTP_METHOD_LAST
LASSO_HTTP_METHOD_NONE
LASSO_HTTP_METHOD_PAOS
LASSO_HTTP_METHOD_POST
LASSO_HTTP_METHOD_REDIRECT
LASSO_HTTP_METHOD_SOAP
LASSO_IDWSF2_DISCOVERY_ERROR_DUPLICATE
LASSO_IDWSF2_DISCOVERY_ERROR_FAILED
LASSO_IDWSF2_DISCOVERY_ERROR_FORBIDDEN
LASSO_IDWSF2_DISCOVERY_ERROR_LOGICAL_DUPLICATE
LASSO_IDWSF2_DISCOVERY_ERROR_NOT_FOUND
LASSO_IDWSF2_DISCOVERY_ERROR_NO_RESULTS
LASSO_IDWSF2_DST_ERROR_DUPLICATE_ITEM
LASSO_IDWSF2_DST_ERROR_ITEM_NOT_FOUND
LASSO_IDWSF2_DST_ERROR_PARTIAL_FAILURE
LASSO_IDWSF2_DST_ERROR_UNKNOWN_STATUS_CODE
LASSO_LASSO_HREF
LASSO_LASSO_PREFIX
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_INTERNET_PROTOCOL
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_INTERNET_PROTOCOL_PASSWORD
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_ONE_FACTOR_CONTRACT
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_ONE_FACTOR_UNREGISTERED
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_TWO_FACTOR_CONTRACT
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_MOBILE_TWO_FACTOR_UNREGISTERED
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_PASSWORD
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_PASSWORD_PROTECTED_TRANSPORT
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_PREVIOUS_SESSION
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_SMARTCARD
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_SMARTCARD_PKI
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_SOFTWARE_PKI
LASSO_LIB_AUTHN_CONTEXT_CLASS_REF_TIME_SYNC_TOKEN
LASSO_LIB_AUTHN_CONTEXT_COMPARISON_BETTER
LASSO_LIB_AUTHN_CONTEXT_COMPARISON_EXACT
LASSO_LIB_AUTHN_CONTEXT_COMPARISON_MAXIMUM
LASSO_LIB_AUTHN_CONTEXT_COMPARISON_MINIMUM
LASSO_LIB_CONSENT_INAPPLICABLE
LASSO_LIB_CONSENT_OBTAINED
LASSO_LIB_CONSENT_OBTAINED_CURRENT_EXPLICIT
LASSO_LIB_CONSENT_OBTAINED_CURRENT_IMPLICIT
LASSO_LIB_CONSENT_OBTAINED_PRIOR
LASSO_LIB_CONSENT_UNAVAILABLE
LASSO_LIB_HREF
LASSO_LIB_MAJOR_VERSION_N
LASSO_LIB_MINOR_VERSION_N
LASSO_LIB_NAMEID_POLICY_TYPE_ANY
LASSO_LIB_NAMEID_POLICY_TYPE_FEDERATED
LASSO_LIB_NAMEID_POLICY_TYPE_NONE
LASSO_LIB_NAMEID_POLICY_TYPE_ONE_TIME
LASSO_LIB_NAME_IDENTIFIER_FORMAT_ENCRYPTED
LASSO_LIB_NAME_IDENTIFIER_FORMAT_ENTITYID
LASSO_LIB_NAME_IDENTIFIER_FORMAT_FEDERATED
LASSO_LIB_NAME_IDENTIFIER_FORMAT_ONE_TIME
LASSO_LIB_PREFIX
LASSO_LIB_PROTOCOL_PROFILE_BRWS_ART
LASSO_LIB_PROTOCOL_PROFILE_BRWS_LECP
LASSO_LIB_PROTOCOL_PROFILE_BRWS_POST
LASSO_LIB_PROTOCOL_PROFILE_FED_TERM_IDP_HTTP
LASSO_LIB_PROTOCOL_PROFILE_FED_TERM_IDP_SOAP
LASSO_LIB_PROTOCOL_PROFILE_FED_TERM_SP_HTTP
LASSO_LIB_PROTOCOL_PROFILE_FED_TERM_SP_SOAP
LASSO_LIB_PROTOCOL_PROFILE_NIM_SP_HTTP
LASSO_LIB_PROTOCOL_PROFILE_RNI_IDP_HTTP
LASSO_LIB_PROTOCOL_PROFILE_RNI_IDP_SOAP
LASSO_LIB_PROTOCOL_PROFILE_RNI_SP_HTTP
LASSO_LIB_PROTOCOL_PROFILE_RNI_SP_SOAP
LASSO_LIB_PROTOCOL_PROFILE_SLO_IDP_HTTP
LASSO_LIB_PROTOCOL_PROFILE_SLO_IDP_SOAP
LASSO_LIB_PROTOCOL_PROFILE_SLO_SP_HTTP
LASSO_LIB_PROTOCOL_PROFILE_SLO_SP_SOAP
LASSO_LIB_STATUS_CODE_FEDERATION_DOES_NOT_EXIST
LASSO_LIB_STATUS_CODE_INVALID_ASSERTION_CONSUMER_SERVICE_INDEX
LASSO_LIB_STATUS_CODE_INVALID_SIGNATURE
LASSO_LIB_STATUS_CODE_NO_AUTHN_CONTEXT
LASSO_LIB_STATUS_CODE_NO_AVAILABLEIDP
LASSO_LIB_STATUS_CODE_NO_PASSIVE
LASSO_LIB_STATUS_CODE_NO_SUPPORTEDIDP
LASSO_LIB_STATUS_CODE_PROXY_COUNT_EXCEEDED
LASSO_LIB_STATUS_CODE_UNKNOWN_PRINCIPAL
LASSO_LIB_STATUS_CODE_UNSIGNED_AUTHN_REQUEST
LASSO_LIB_STATUS_CODE_UNSUPPORTED_PROFILE
LASSO_LOGIN_ERROR_ASSERTION_DOES_NOT_MATCH_REQUEST_ID
LASSO_LOGIN_ERROR_ASSERTION_REPLAY
LASSO_LOGIN_ERROR_CONSENT_NOT_OBTAINED
LASSO_LOGIN_ERROR_FEDERATION_NOT_FOUND
LASSO_LOGIN_ERROR_INVALID_NAMEIDPOLICY
LASSO_LOGIN_ERROR_INVALID_SIGNATURE
LASSO_LOGIN_ERROR_NO_DEFAULT_ENDPOINT
LASSO_LOGIN_ERROR_REQUEST_DENIED
LASSO_LOGIN_ERROR_STATUS_NOT_SUCCESS
LASSO_LOGIN_ERROR_UNKNOWN_PRINCIPAL
LASSO_LOGIN_ERROR_UNSIGNED_AUTHN_REQUEST
LASSO_LOGIN_PROTOCOL_PROFILE_BRWS_ART
LASSO_LOGIN_PROTOCOL_PROFILE_BRWS_LECP
LASSO_LOGIN_PROTOCOL_PROFILE_BRWS_POST
LASSO_LOGIN_PROTOCOL_PROFILE_REDIRECT
LASSO_LOGOUT_ERROR_FEDERATION_NOT_FOUND
LASSO_LOGOUT_ERROR_REQUEST_DENIED
LASSO_LOGOUT_ERROR_UNKNOWN_PRINCIPAL
LASSO_LOGOUT_ERROR_UNSUPPORTED_PROFILE
LASSO_MD_PROTOCOL_TYPE_ARTIFACT_RESOLUTION
LASSO_MD_PROTOCOL_TYPE_ASSERTION_ID_REQUEST
LASSO_MD_PROTOCOL_TYPE_FEDERATION_TERMINATION
LASSO_MD_PROTOCOL_TYPE_MANAGE_NAME_ID
LASSO_MD_PROTOCOL_TYPE_NAME_IDENTIFIER_MAPPING
LASSO_MD_PROTOCOL_TYPE_REGISTER_NAME_IDENTIFIER
LASSO_MD_PROTOCOL_TYPE_SINGLE_LOGOUT
LASSO_MD_PROTOCOL_TYPE_SINGLE_SIGN_ON
LASSO_MESSAGE_FORMAT_BASE64
LASSO_MESSAGE_FORMAT_ERROR
LASSO_MESSAGE_FORMAT_QUERY
LASSO_MESSAGE_FORMAT_SOAP
LASSO_MESSAGE_FORMAT_UNKNOWN
LASSO_MESSAGE_FORMAT_XML
LASSO_MESSAGE_FORMAT_XSCHEMA_ERROR
LASSO_METADATA_HREF
LASSO_METADATA_PREFIX
LASSO_NAME_IDENTIFIER_MAPPING_ERROR_FORBIDDEN_CALL_ON_THIS_SIDE
LASSO_NAME_IDENTIFIER_MAPPING_ERROR_MISSING_TARGET_IDENTIFIER
LASSO_NAME_IDENTIFIER_MAPPING_ERROR_MISSING_TARGET_NAMESPACE
LASSO_PAOS_HREF
LASSO_PAOS_PREFIX
LASSO_PARAM_ERROR_BAD_TYPE_OR_NULL_OBJ
LASSO_PARAM_ERROR_CHECK_FAILED
LASSO_PARAM_ERROR_INVALID_VALUE
LASSO_PARAM_ERROR_NON_INITIALIZED_OBJECT
LASSO_PROFILE_ERROR_BAD_IDENTITY_DUMP
LASSO_PROFILE_ERROR_BAD_SESSION_DUMP
LASSO_PROFILE_ERROR_BUILDING_MESSAGE_FAILED
LASSO_PROFILE_ERROR_BUILDING_QUERY_FAILED
LASSO_PROFILE_ERROR_BUILDING_REQUEST_FAILED
LASSO_PROFILE_ERROR_BUILDING_RESPONSE_FAILED
LASSO_PROFILE_ERROR_CANNOT_FIND_A_PROVIDER
LASSO_PROFILE_ERROR_CANNOT_VERIFY_SIGNATURE
LASSO_PROFILE_ERROR_FEDERATION_NOT_FOUND
LASSO_PROFILE_ERROR_IDENTITY_NOT_FOUND
LASSO_PROFILE_ERROR_INVALID_ARTIFACT
LASSO_PROFILE_ERROR_INVALID_HTTP_METHOD
LASSO_PROFILE_ERROR_INVALID_ISSUER
LASSO_PROFILE_ERROR_INVALID_MSG
LASSO_PROFILE_ERROR_INVALID_POST_MSG
LASSO_PROFILE_ERROR_INVALID_PROTOCOLPROFILE
LASSO_PROFILE_ERROR_INVALID_QUERY
LASSO_PROFILE_ERROR_INVALID_REQUEST
LASSO_PROFILE_ERROR_INVALID_RESPONSE
LASSO_PROFILE_ERROR_INVALID_SOAP_MSG
LASSO_PROFILE_ERROR_MISSING_ARTIFACT
LASSO_PROFILE_ERROR_MISSING_ASSERTION
LASSO_PROFILE_ERROR_MISSING_ENCRYPTION_PRIVATE_KEY
LASSO_PROFILE_ERROR_MISSING_ENDPOINT_REFERENCE
LASSO_PROFILE_ERROR_MISSING_ENDPOINT_REFERENCE_ADDRESS
LASSO_PROFILE_ERROR_MISSING_ISSUER
LASSO_PROFILE_ERROR_MISSING_NAME_IDENTIFIER
LASSO_PROFILE_ERROR_MISSING_REMOTE_PROVIDERID
LASSO_PROFILE_ERROR_MISSING_REQUEST
LASSO_PROFILE_ERROR_MISSING_RESOURCE_OFFERING
LASSO_PROFILE_ERROR_MISSING_RESPONSE
LASSO_PROFILE_ERROR_MISSING_SERVER
LASSO_PROFILE_ERROR_MISSING_SERVICE_DESCRIPTION
LASSO_PROFILE_ERROR_MISSING_SERVICE_INSTANCE
LASSO_PROFILE_ERROR_MISSING_SERVICE_TYPE
LASSO_PROFILE_ERROR_MISSING_STATUS_CODE
LASSO_PROFILE_ERROR_MISSING_SUBJECT
LASSO_PROFILE_ERROR_NAME_IDENTIFIER_NOT_FOUND
LASSO_PROFILE_ERROR_RESPONSE_DOES_NOT_MATCH_REQUEST
LASSO_PROFILE_ERROR_SESSION_NOT_FOUND
LASSO_PROFILE_ERROR_STATUS_NOT_SUCCESS
LASSO_PROFILE_ERROR_UNKNOWN_PROFILE_URL
LASSO_PROFILE_ERROR_UNKNOWN_PROVIDER
LASSO_PROFILE_ERROR_UNSUPPORTED_BINDING
LASSO_PROFILE_ERROR_UNSUPPORTED_PROFILE
LASSO_PROFILE_SIGNATURE_HINT_FORBID
LASSO_PROFILE_SIGNATURE_HINT_FORCE
LASSO_PROFILE_SIGNATURE_HINT_MAYBE
LASSO_PROTOCOL_LIBERTY_1_0
LASSO_PROTOCOL_LIBERTY_1_1
LASSO_PROTOCOL_LIBERTY_1_2
LASSO_PROTOCOL_NONE
LASSO_PROTOCOL_SAML_2_0
LASSO_PROVIDER_ERROR_MISSING_PUBLIC_KEY
LASSO_PROVIDER_ROLE_BOTH
LASSO_PROVIDER_ROLE_IDP
LASSO_PROVIDER_ROLE_NONE
LASSO_PROVIDER_ROLE_SP
LASSO_PYTHON_HREF
LASSO_REGISTRY_ERROR_KEY_EXISTS
LASSO_REQUEST_TYPE_DEFEDERATION
LASSO_REQUEST_TYPE_DISCO_MODIFY
LASSO_REQUEST_TYPE_DISCO_QUERY
LASSO_REQUEST_TYPE_DST_MODIFY
LASSO_REQUEST_TYPE_DST_QUERY
LASSO_REQUEST_TYPE_IDWSF2_DISCO_QUERY
LASSO_REQUEST_TYPE_IDWSF2_DISCO_SVCMD_ASSOCIATION_ADD
LASSO_REQUEST_TYPE_IDWSF2_DISCO_SVCMD_REGISTER
LASSO_REQUEST_TYPE_INVALID
LASSO_REQUEST_TYPE_LECP
LASSO_REQUEST_TYPE_LOGIN
LASSO_REQUEST_TYPE_LOGOUT
LASSO_REQUEST_TYPE_NAME_IDENTIFIER_MAPPING
LASSO_REQUEST_TYPE_NAME_ID_MANAGEMENT
LASSO_REQUEST_TYPE_NAME_REGISTRATION
LASSO_REQUEST_TYPE_SASL_REQUEST
LASSO_SAML2_ASSERTION_HREF
LASSO_SAML2_ASSERTION_INDETERMINATE
LASSO_SAML2_ASSERTION_INVALID
LASSO_SAML2_ASSERTION_PREFIX
LASSO_SAML2_ASSERTION_VALID
LASSO_SAML2_ATTRIBUTE_NAME_EPR
LASSO_SAML2_ATTRIBUTE_NAME_FORMAT_URI
LASSO_SAML2_AUTHN_CONTEXT_AUTHENTICATED_TELEPHONY
LASSO_SAML2_AUTHN_CONTEXT_INTERNET_PROTOCOL
LASSO_SAML2_AUTHN_CONTEXT_INTERNET_PROTOCOL_PASSWORD
LASSO_SAML2_AUTHN_CONTEXT_KERBEROS
LASSO_SAML2_AUTHN_CONTEXT_MOBILE_ONE_FACTOR_CONTRACT
LASSO_SAML2_AUTHN_CONTEXT_MOBILE_ONE_FACTOR_UNREGISTERED
LASSO_SAML2_AUTHN_CONTEXT_MOBILE_TWO_FACTOR_CONTRACT
LASSO_SAML2_AUTHN_CONTEXT_MOBILE_TWO_FACTOR_UNREGISTERED
LASSO_SAML2_AUTHN_CONTEXT_NOMAD_TELEPHONY
LASSO_SAML2_AUTHN_CONTEXT_PASSWORD
LASSO_SAML2_AUTHN_CONTEXT_PASSWORD_PROTECTED_TRANSPORT
LASSO_SAML2_AUTHN_CONTEXT_PERSONALIZED_TELEPHONY
LASSO_SAML2_AUTHN_CONTEXT_PGP
LASSO_SAML2_AUTHN_CONTEXT_PREVIOUS_SESSION
LASSO_SAML2_AUTHN_CONTEXT_SECURE_REMOTE_PASSWORD
LASSO_SAML2_AUTHN_CONTEXT_SMARTCARD
LASSO_SAML2_AUTHN_CONTEXT_SMARTCARD_PKI
LASSO_SAML2_AUTHN_CONTEXT_SOFTWARE_PKI
LASSO_SAML2_AUTHN_CONTEXT_SPKI
LASSO_SAML2_AUTHN_CONTEXT_TELEPHONY
LASSO_SAML2_AUTHN_CONTEXT_TIME_SYNC_TOKEN
LASSO_SAML2_AUTHN_CONTEXT_TLS_CLIENT
LASSO_SAML2_AUTHN_CONTEXT_UNSPECIFIED
LASSO_SAML2_AUTHN_CONTEXT_X509
LASSO_SAML2_AUTHN_CONTEXT_XMLDSIG
LASSO_SAML2_CONFIRMATION_METHOD_BEARER
LASSO_SAML2_CONFIRMATION_METHOD_HOLDER_OF_KEY
LASSO_SAML2_CONSENT_EXPLICIT
LASSO_SAML2_CONSENT_IMPLICIT
LASSO_SAML2_CONSENT_INAPPLICABLE
LASSO_SAML2_CONSENT_OBTAINED
LASSO_SAML2_CONSENT_PRIOR
LASSO_SAML2_CONSENT_UNAVAILABLE
LASSO_SAML2_DEFLATE_ENCODING
LASSO_SAML2_METADATA_BINDING_ARTIFACT
LASSO_SAML2_METADATA_BINDING_PAOS
LASSO_SAML2_METADATA_BINDING_POST
LASSO_SAML2_METADATA_BINDING_REDIRECT
LASSO_SAML2_METADATA_BINDING_SOAP
LASSO_SAML2_METADATA_HREF
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_EMAIL
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_ENCRYPTED
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_ENTITY
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_KERBEROS
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_PERSISTENT
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_TRANSIENT
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_UNSPECIFIED
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_WINDOWS
LASSO_SAML2_NAME_IDENTIFIER_FORMAT_X509
LASSO_SAML2_PROTOCOL_HREF
LASSO_SAML2_PROTOCOL_PREFIX
LASSO_SAML2_STATUS_CODE_AUTHN_FAILED
LASSO_SAML2_STATUS_CODE_INVALID_ATTR_NAME
LASSO_SAML2_STATUS_CODE_INVALID_NAME_ID_POLICY
LASSO_SAML2_STATUS_CODE_NO_AUTHN_CONTEXT
LASSO_SAML2_STATUS_CODE_NO_AVAILABLE_IDP
LASSO_SAML2_STATUS_CODE_NO_PASSIVE
LASSO_SAML2_STATUS_CODE_NO_SUPPORTED_IDP
LASSO_SAML2_STATUS_CODE_PARTIAL_LOGOUT
LASSO_SAML2_STATUS_CODE_PROXY_COUNT_EXCEEDED
LASSO_SAML2_STATUS_CODE_REQUESTER
LASSO_SAML2_STATUS_CODE_REQUEST_DENIED
LASSO_SAML2_STATUS_CODE_REQUEST_UNSUPPORTED
LASSO_SAML2_STATUS_CODE_REQUEST_VERSION_DEPRECATED
LASSO_SAML2_STATUS_CODE_REQUEST_VERSION_TOO_HIGH
LASSO_SAML2_STATUS_CODE_REQUEST_VERSION_TOO_LOW
LASSO_SAML2_STATUS_CODE_RESOURCE_NOT_RECOGNIZED
LASSO_SAML2_STATUS_CODE_RESPONDER
LASSO_SAML2_STATUS_CODE_SUCCESS
LASSO_SAML2_STATUS_CODE_TOO_MANY_RESPONSES
LASSO_SAML2_STATUS_CODE_UNKNOWN_ATTR_PROFILE
LASSO_SAML2_STATUS_CODE_UNKNOWN_PRINCIPAL
LASSO_SAML2_STATUS_CODE_UNSUPPORTED_BINDING
LASSO_SAML2_STATUS_CODE_VERSION_MISMATCH
LASSO_SAML_ASSERTION_HREF
LASSO_SAML_ASSERTION_PREFIX
LASSO_SAML_AUTHENTICATION_METHODS_PKI
LASSO_SAML_AUTHENTICATION_METHOD_HARDWARE_TOKEN
LASSO_SAML_AUTHENTICATION_METHOD_KERBEROS
LASSO_SAML_AUTHENTICATION_METHOD_LIBERTY
LASSO_SAML_AUTHENTICATION_METHOD_PASSWORD
LASSO_SAML_AUTHENTICATION_METHOD_PGP
LASSO_SAML_AUTHENTICATION_METHOD_SECURE_REMOTE_PASSWORD
LASSO_SAML_AUTHENTICATION_METHOD_SMARTCARD_PKI
LASSO_SAML_AUTHENTICATION_METHOD_SOFTWARE_PKI
LASSO_SAML_AUTHENTICATION_METHOD_UNSPECIFIED
LASSO_SAML_AUTHENTICATION_METHOD_XKMS
LASSO_SAML_AUTHENTICATION_METHOD_XMLD_SIG
LASSO_SAML_CONFIRMATION_METHOD_ARTIFACT
LASSO_SAML_CONFIRMATION_METHOD_ARTIFACT01
LASSO_SAML_CONFIRMATION_METHOD_BEARER
LASSO_SAML_CONFIRMATION_METHOD_HOLDER_OF_KEY
LASSO_SAML_CONFIRMATION_METHOD_SENDER_VOUCHES
LASSO_SAML_MAJOR_VERSION_N
LASSO_SAML_MINOR_VERSION_N
LASSO_SAML_PROTOCOL_HREF
LASSO_SAML_PROTOCOL_PREFIX
LASSO_SAML_STATUS_CODE_REQUESTER
LASSO_SAML_STATUS_CODE_REQUEST_DENIED
LASSO_SAML_STATUS_CODE_REQUEST_VERSION_DEPRECATED
LASSO_SAML_STATUS_CODE_REQUEST_VERSION_TOO_HIGH
LASSO_SAML_STATUS_CODE_REQUEST_VERSION_TOO_LOW
LASSO_SAML_STATUS_CODE_RESOURCE_NOT_RECOGNIZED
LASSO_SAML_STATUS_CODE_RESPONDER
LASSO_SAML_STATUS_CODE_SUCCESS
LASSO_SAML_STATUS_CODE_TOO_MANY_RESPONSES
LASSO_SAML_STATUS_CODE_VERSION_MISMATCH
LASSO_SERVER_ERROR_ADD_PROVIDER_FAILED
LASSO_SERVER_ERROR_ADD_PROVIDER_PROTOCOL_MISMATCH
LASSO_SERVER_ERROR_INVALID_XML
LASSO_SERVER_ERROR_PROVIDER_NOT_FOUND
LASSO_SERVER_ERROR_SET_ENCRYPTION_PRIVATE_KEY_FAILED
LASSO_SIGNATURE_METHOD_DSA_SHA1
LASSO_SIGNATURE_METHOD_RSA_SHA1
LASSO_SIGNATURE_TYPE_NONE
LASSO_SIGNATURE_TYPE_SIMPLE
LASSO_SIGNATURE_TYPE_WITHX509
LASSO_SOAP_ENV_ACTOR
LASSO_SOAP_ENV_HREF
LASSO_SOAP_ENV_PREFIX
LASSO_SOAP_ERROR_MISSING_BODY
LASSO_SOAP_ERROR_MISSING_ENVELOPE
LASSO_SOAP_ERROR_MISSING_HEADER
LASSO_SOAP_ERROR_MISSING_SOAP_FAULT_DETAIL
LASSO_SOAP_ERROR_REDIRECT_REQUEST_FAULT
LASSO_SOAP_FAULT_CODE_CLIENT
LASSO_SOAP_FAULT_CODE_MUST_UNDERSTAND
LASSO_SOAP_FAULT_CODE_SERVER
LASSO_SOAP_FAULT_CODE_VERSION_MISMATCH
LASSO_WSF_ENABLED
LASSO_WSF_PROFILE_ERROR_INVALID_OR_MISSING_REFERENCE_TO_MESSAGE_ID
LASSO_WSF_PROFILE_ERROR_MISSING_ASSERTION_ID
LASSO_WSF_PROFILE_ERROR_MISSING_CORRELATION
LASSO_WSF_PROFILE_ERROR_MISSING_CREDENTIAL_REF
LASSO_WSF_PROFILE_ERROR_MISSING_DESCRIPTION
LASSO_WSF_PROFILE_ERROR_MISSING_ENDPOINT
LASSO_WSF_PROFILE_ERROR_MISSING_RESOURCE_ID
LASSO_WSF_PROFILE_ERROR_MISSING_SECURITY
LASSO_WSF_PROFILE_ERROR_REDIRECT_REQUEST
LASSO_WSF_PROFILE_ERROR_SECURITY_MECHANISM_CHECK_FAILED
LASSO_WSF_PROFILE_ERROR_SERVER_INTERACTION_REQUIRED
LASSO_WSF_PROFILE_ERROR_SERVER_INTERACTION_REQUIRED_FOR_DATA
LASSO_WSF_PROFILE_ERROR_SOAP_FAULT
LASSO_WSF_PROFILE_ERROR_UNKNOWN_STATUS_CODE
LASSO_WSF_PROFILE_ERROR_UNSUPPORTED_SECURITY_MECHANISM
LASSO_WSSEC_ERROR_MISSING_SECURITY_TOKEN
LASSO_XML_ERROR_ATTR_NOT_FOUND
LASSO_XML_ERROR_ATTR_VALUE_NOT_FOUND
LASSO_XML_ERROR_INVALID_FILE
LASSO_XML_ERROR_MISSING_NAMESPACE
LASSO_XML_ERROR_NODE_CONTENT_NOT_FOUND
LASSO_XML_ERROR_NODE_NOT_FOUND
LASSO_XML_ERROR_OBJECT_CONSTRUCTION_FAILED
LASSO_XSI_HREF
LASSO_XSI_PREFIX
struct LassoAssertionQuery {  LassoAssertionQueryPrivate* private_data  }
LassoAssertionQueryRequestType
LassoCheckVersionMode
struct LassoDefederation {  void* private_data  }
struct LassoDsKeyInfo {  LassoDsKeyValue* KeyValue  }
struct LassoDsKeyValue {  LassoDsRsaKeyValue* RSAKeyValue  }
struct LassoDsRsaKeyValue {  char* Modulus, char* Exponent  }
struct LassoEcp {  gchar* assertionConsumerURL, LassoEcpPrivate* private_data  }
LassoEncryptionMode
LassoEncryptionSymKeyType
struct LassoFederation {  gchar* remote_providerID, LassoNode* local_nameIdentifier, LassoNode* remote_nameIdentifier, LassoFederationPrivate* private_data  }
LassoHttpMethod
struct LassoIdentity {  GHashTable* federations, gboolean is_dirty, LassoIdentityPrivate* private_data  }
struct LassoLecp {  LassoLibAuthnRequestEnvelope* authnRequestEnvelope, LassoLibAuthnResponseEnvelope* authnResponseEnvelope, char* assertionConsumerServiceURL, void* private_data  }
struct LassoLibAssertion {  char* InResponseTo  }
struct LassoLibAuthenticationStatement {  LassoLibAuthnContext* AuthnContext, char* ReauthenticateOnOrAfter, char* SessionIndex  }
struct LassoLibAuthnContext {  char* AuthnContextClassRef, char* AuthnContextStatementRef, void* AuthenticationContextStatement  }
struct LassoLibAuthnRequest {  GList* Extension, char* ProviderID, char* AffiliationID, char* NameIDPolicy, gboolean ForceAuthn, gboolean IsPassive, char* ProtocolProfile, char* AssertionConsumerServiceID, LassoLibRequestAuthnContext* RequestAuthnContext, char* RelayState, LassoLibScoping* Scoping, char* consent  }
struct LassoLibAuthnRequestEnvelope {  GList* Extension, LassoLibAuthnRequest* AuthnRequest, char* ProviderID, char* ProviderName, char* AssertionConsumerServiceURL, LassoLibIDPList* IDPList, gboolean IsPassive  }
struct LassoLibAuthnResponse {  GList* Extension, char* ProviderID, char* RelayState, char* consent  }
struct LassoLibAuthnResponseEnvelope {  GList* Extension, LassoLibAuthnResponse* AuthnResponse, char* AssertionConsumerServiceURL  }
struct LassoLibFederationTerminationNotification {  GList* Extension, char* ProviderID, LassoSamlNameIdentifier* NameIdentifier, char* consent, char* RelayState  }
struct LassoLibIDPEntries {  GList* IDPEntry  }
struct LassoLibIDPEntry {  char* ProviderID, char* ProviderName, char* Loc  }
struct LassoLibIDPList {  LassoLibIDPEntries* IDPEntries, char* GetComplete  }
struct LassoLibLogoutRequest {  GList* Extension, char* ProviderID, LassoSamlNameIdentifier* NameIdentifier, char* SessionIndex, char* RelayState, char* consent, char* NotOnOrAfter  }
struct LassoLibLogoutResponse {    }
struct LassoLibNameIdentifierMappingRequest {  GList* Extension, char* ProviderID, LassoSamlNameIdentifier* NameIdentifier, char* TargetNamespace, char* consent  }
struct LassoLibNameIdentifierMappingResponse {  GList* Extension, char* ProviderID, LassoSamlpStatus* Status, LassoSamlNameIdentifier* NameIdentifier  }
struct LassoLibRegisterNameIdentifierRequest {  GList* Extension, char* ProviderID, LassoSamlNameIdentifier* IDPProvidedNameIdentifier, LassoSamlNameIdentifier* SPProvidedNameIdentifier, LassoSamlNameIdentifier* OldProvidedNameIdentifier, char* RelayState  }
struct LassoLibRegisterNameIdentifierResponse {    }
struct LassoLibRequestAuthnContext {  GList* AuthnContextClassRef, GList* AuthnContextStatementRef, char* AuthnContextComparison  }
struct LassoLibScoping {  int ProxyCount, LassoLibIDPList* IDPList  }
struct LassoLibStatusResponse {  GList* Extension, char* ProviderID, LassoSamlpStatus* Status, char* RelayState  }
struct LassoLibSubject {  LassoSamlNameIdentifier* IDPProvidedNameIdentifier  }
struct LassoLogin {  LassoLoginProtocolProfile protocolProfile, gchar* assertionArtifact, LassoSamlAssertion* assertion, gchar* nameIDPolicy, LassoHttpMethod http_method, LassoLoginPrivate* private_data  }
LassoLoginProtocolProfile
struct LassoLogout {  LassoNode* initial_request, LassoNode* initial_response, gchar* initial_remote_providerID, gint providerID_index, LassoHttpMethod initial_http_request_method, LassoLogoutPrivate* private_data  }
LassoMdProtocolType
LassoMessageFormat
struct LassoMiscTextNode {  char* content, char* name, char* ns_href, char* ns_prefix, gboolean text_child  }
struct LassoNameIdManagement {  void* private_data  }
struct LassoNameIdentifierMapping {  gchar* targetNameIdentifier, void* private_data  }
struct LassoNameRegistration {  LassoSamlNameIdentifier* oldNameIdentifier, void* private_data  }
struct LassoNode {    }
struct LassoProfile {  LassoServer* server, LassoNode* request, LassoNode* response, LassoNode* nameIdentifier, gchar* remote_providerID, gchar* msg_url, gchar* msg_body, gchar* msg_relayState, LassoIdentity* identity, LassoSession* session, LassoHttpMethod http_request_method, gint signature_status, LassoProfilePrivate* private_data  }
LassoProfileSignatureHint
LassoProtocolConformance
struct LassoProvider {  gchar* ProviderID, LassoProviderRole role, char* metadata_filename, gchar* public_key, gchar* ca_cert_chain, LassoProviderPrivate* private_data  }
LassoProviderRole
LassoRequestType
struct LassoSaml2Action {  char* content, char* Namespace  }
struct LassoSaml2Advice {  GList* AssertionIDRef, GList* AssertionURIRef, GList* Assertion, GList* EncryptedAssertion  }
struct LassoSaml2Assertion {  LassoSaml2NameID* Issuer, LassoSaml2Subject* Subject, LassoSaml2Conditions* Conditions, LassoSaml2Advice* Advice, GList* Statement, GList* AuthnStatement, GList* AuthzDecisionStatement, GList* AttributeStatement, char* Version, char* ID, char* IssueInstant, LassoSignatureType sign_type, LassoSignatureMethod sign_method, char* private_key_file, char* certificate_file, gboolean encryption_activated, char* encryption_public_key_str, LassoEncryptionSymKeyType encryption_sym_key_type  }
LassoSaml2AssertionValidationState
struct LassoSaml2Attribute {  GList* AttributeValue, char* Name, char* NameFormat, char* FriendlyName  }
struct LassoSaml2AttributeStatement {  GList* Attribute, GList* EncryptedAttribute  }
struct LassoSaml2AttributeValue {  GList* any  }
struct LassoSaml2AudienceRestriction {  char* Audience  }
struct LassoSaml2AuthnContext {  char* AuthnContextClassRef, char* AuthnContextDeclRef, char* AuthenticatingAuthority  }
struct LassoSaml2AuthnStatement {  LassoSaml2SubjectLocality* SubjectLocality, LassoSaml2AuthnContext* AuthnContext, char* AuthnInstant, char* SessionIndex, char* SessionNotOnOrAfter  }
struct LassoSaml2AuthzDecisionStatement {  LassoSaml2Action* Action, LassoSaml2Evidence* Evidence, char* Resource, char* Decision  }
struct LassoSaml2BaseIDAbstract {  char* NameQualifier, char* SPNameQualifier  }
struct LassoSaml2ConditionAbstract {    }
struct LassoSaml2Conditions {  GList* Condition, GList* AudienceRestriction, GList* OneTimeUse, GList* ProxyRestriction, char* NotBefore, char* NotOnOrAfter  }
struct LassoSaml2EncryptedElement {  xmlNode* EncryptedData, GList* EncryptedKey, LassoNode* original_data  }
struct LassoSaml2Evidence {  GList* AssertionIDRef, GList* AssertionURIRef, GList* Assertion, GList* EncryptedAssertion  }
struct LassoSaml2KeyInfoConfirmationData {    }
struct LassoSaml2NameID {  char* content, char* Format, char* SPProvidedID, char* NameQualifier, char* SPNameQualifier  }
struct LassoSaml2OneTimeUse {    }
struct LassoSaml2ProxyRestriction {  char* Audience, char* Count  }
struct LassoSaml2StatementAbstract {    }
struct LassoSaml2Subject {  LassoSaml2BaseIDAbstract* BaseID, LassoSaml2NameID* NameID, LassoSaml2EncryptedElement* EncryptedID, LassoSaml2SubjectConfirmation* SubjectConfirmation  }
struct LassoSaml2SubjectConfirmation {  LassoSaml2BaseIDAbstract* BaseID, LassoSaml2NameID* NameID, LassoSaml2EncryptedElement* EncryptedID, LassoSaml2SubjectConfirmationData* SubjectConfirmationData, char* Method  }
struct LassoSaml2SubjectConfirmationData {  char* NotBefore, char* NotOnOrAfter, char* Recipient, char* InResponseTo, char* Address  }
struct LassoSaml2SubjectLocality {  char* Address, char* DNSName  }
struct LassoSamlAdvice {  GList* any  }
struct LassoSamlAssertion {  LassoSamlConditions* Conditions, LassoSamlAdvice* Advice, void* Statement, LassoSamlSubjectStatement* SubjectStatement, LassoSamlAuthenticationStatement* AuthenticationStatement, void* AuthorizationDecisionStatement, LassoSamlAttributeStatement* AttributeStatement, int MajorVersion, int MinorVersion, char* AssertionID, char* Issuer, char* IssueInstant, LassoSignatureType sign_type, LassoSignatureMethod sign_method, char* private_key_file, char* certificate_file  }
struct LassoSamlAttribute {  gchar* attributeName, gchar* attributeNameSpace, GList* AttributeValue  }
struct LassoSamlAttributeDesignator {  char* AttributeName, char* AttributeNamespace  }
struct LassoSamlAttributeStatement {  GList* Attribute  }
struct LassoSamlAttributeValue {  GList* any  }
struct LassoSamlAudienceRestrictionCondition {  GList* Audience  }
struct LassoSamlAuthenticationStatement {  LassoSamlSubjectLocality* SubjectLocality, GList* AuthorityBinding, char* AuthenticationMethod, char* AuthenticationInstant  }
struct LassoSamlAuthorityBinding {  char* AuthorityKind, char* Location, char* Binding  }
struct LassoSamlConditionAbstract {    }
struct LassoSamlConditions {  GList* Condition, GList* AudienceRestrictionCondition, char* NotBefore, char* NotOnOrAfter  }
struct LassoSamlNameIdentifier {  char* NameQualifier, char* Format, char* content  }
struct LassoSamlStatementAbstract {    }
struct LassoSamlSubject {  LassoSamlNameIdentifier* NameIdentifier, LassoSamlSubjectConfirmation* SubjectConfirmation, LassoSaml2EncryptedElement* EncryptedNameIdentifier  }
struct LassoSamlSubjectConfirmation {  GList* ConfirmationMethod, char* SubjectConfirmationData, LassoDsKeyInfo* KeyInfo  }
struct LassoSamlSubjectLocality {  char* IPAddress, char* DNSAddress  }
struct LassoSamlSubjectStatement {    }
struct LassoSamlSubjectStatementAbstract {  LassoSamlSubject* Subject  }
struct LassoSamlp2ArtifactResolve {  char* Artifact  }
struct LassoSamlp2ArtifactResponse {  LassoNode* any  }
struct LassoSamlp2AssertionIDRequest {  char* AssertionIDRef  }
struct LassoSamlp2AttributeQuery {  GList* Attribute  }
struct LassoSamlp2AuthnQuery {  LassoSamlp2RequestedAuthnContext* RequestedAuthnContext, char* SessionIndex  }
struct LassoSamlp2AuthnRequest {  LassoSaml2Subject* Subject, LassoSamlp2NameIDPolicy* NameIDPolicy, LassoSaml2Conditions* Conditions, LassoSamlp2RequestedAuthnContext* RequestedAuthnContext, LassoSamlp2Scoping* Scoping, gboolean ForceAuthn, gboolean IsPassive, char* ProtocolBinding, int AssertionConsumerServiceIndex, char* AssertionConsumerServiceURL, int AttributeConsumingServiceIndex, char* ProviderName, G_GNUC_DEPRECATED char  }
struct LassoSamlp2AuthzDecisionQuery {  LassoSaml2Action* Action, LassoSaml2Evidence* Evidence, char* Resource  }
struct LassoSamlp2Extensions {    }
struct LassoSamlp2IDPEntry {  char* ProviderID, char* Name, char* Loc  }
struct LassoSamlp2IDPList {  LassoSamlp2IDPEntry* IDPEntry, char* GetComplete  }
struct LassoSamlp2LogoutRequest {  LassoSaml2BaseIDAbstract* BaseID, LassoSaml2NameID* NameID, LassoSaml2EncryptedElement* EncryptedID, char* SessionIndex, char* Reason, char* NotOnOrAfter, G_GNUC_DEPRECATED char  }
struct LassoSamlp2LogoutResponse {  G_GNUC_DEPRECATED char  }
struct LassoSamlp2ManageNameIDRequest {  LassoSaml2NameID* NameID, LassoSaml2EncryptedElement* EncryptedID, char* NewID, LassoSaml2EncryptedElement* NewEncryptedID, LassoSamlp2Terminate* Terminate  }
struct LassoSamlp2ManageNameIDResponse {    }
struct LassoSamlp2NameIDMappingRequest {  LassoSaml2BaseIDAbstract* BaseID, LassoSaml2NameID* NameID, LassoSaml2EncryptedElement* EncryptedID, LassoSamlp2NameIDPolicy* NameIDPolicy  }
struct LassoSamlp2NameIDMappingResponse {  LassoSaml2NameID* NameID, LassoSaml2EncryptedElement* EncryptedID  }
struct LassoSamlp2NameIDPolicy {  char* Format, char* SPNameQualifier, gboolean AllowCreate  }
struct LassoSamlp2RequestAbstract {  LassoSaml2NameID* Issuer, LassoSamlp2Extensions* Extensions, char* ID, char* Version, char* IssueInstant, char* Destination, char* Consent, LassoSignatureType sign_type, LassoSignatureMethod sign_method, char* private_key_file, char* certificate_file  }
struct LassoSamlp2RequestedAuthnContext {  GList* AuthnContextClassRef, GList* AuthnContextDeclRef, char* Comparison  }
struct LassoSamlp2Response {  GList* Assertion, GList* EncryptedAssertion  }
struct LassoSamlp2Scoping {  LassoSamlp2IDPList* IDPList, char* RequesterID, char* ProxyCount  }
struct LassoSamlp2Status {  LassoSamlp2StatusCode* StatusCode, char* StatusMessage, LassoSamlp2StatusDetail* StatusDetail  }
struct LassoSamlp2StatusCode {  LassoSamlp2StatusCode* StatusCode, char* Value  }
struct LassoSamlp2StatusDetail {    }
struct LassoSamlp2StatusResponse {  LassoSaml2NameID* Issuer, LassoSamlp2Extensions* Extensions, LassoSamlp2Status* Status, char* ID, char* InResponseTo, char* Version, char* IssueInstant, char* Destination, char* Consent, LassoSignatureType sign_type, LassoSignatureMethod sign_method, char* private_key_file, char* certificate_file  }
struct LassoSamlp2SubjectQueryAbstract {  LassoSaml2Subject* Subject  }
struct LassoSamlp2Terminate {    }
struct LassoSamlpRequest {  char* AssertionArtifact  }
struct LassoSamlpRequestAbstract {  GList* RespondWith, char* RequestID, int MajorVersion, int MinorVersion, char* IssueInstant, LassoSignatureType sign_type, LassoSignatureMethod sign_method, char* private_key_file, char* certificate_file  }
struct LassoSamlpResponse {  LassoSamlpStatus* Status, GList* Assertion  }
struct LassoSamlpResponseAbstract {  char* ResponseID, char* InResponseTo, int MajorVersion, int MinorVersion, char* IssueInstant, char* Recipient, LassoSignatureType sign_type, LassoSignatureMethod sign_method, char* private_key_file, char* certificate_file  }
struct LassoSamlpStatus {  LassoSamlpStatusCode* StatusCode, char* StatusMessage  }
struct LassoSamlpStatusCode {  LassoSamlpStatusCode* StatusCode, char* Value  }
struct LassoServer {  GHashTable* providers, GHashTable* services, gchar* private_key, gchar* private_key_password, gchar* certificate, LassoSignatureMethod signature_method, LassoServerPrivate* private_data  }
struct LassoSession {  GHashTable* assertions, gboolean is_dirty, LassoSessionPrivate* private_data  }
LassoSignatureMethod
LassoSignatureType
gint   lasso_assertion_query_build_request_msg ( LassoAssertionQuery* assertion_query )
int   lasso_assertion_query_build_response_msg ( LassoAssertionQuery* assertion_query )
None   lasso_assertion_query_destroy ( LassoAssertionQuery* assertion_query )
GType   lasso_assertion_query_get_type (  )
gint   lasso_assertion_query_init_request ( LassoAssertionQuery* assertion_query, char* remote_provider_id, LassoHttpMethod http_method, LassoAssertionQueryRequestType query_request_type )
LassoAssertionQuery*   lasso_assertion_query_new ( LassoServer* server )
gint   lasso_assertion_query_process_request_msg ( LassoAssertionQuery* assertion_query, gchar* request_msg )
gint   lasso_assertion_query_process_response_msg ( LassoAssertionQuery* assertion_query, gchar* response_msg )
gint   lasso_assertion_query_validate_request ( LassoAssertionQuery* assertion_query )
int   lasso_check_version ( int major, int minor, int subminor, LassoCheckVersionMode mode )
gint   lasso_defederation_build_notification_msg ( LassoDefederation* defederation )
None   lasso_defederation_destroy ( LassoDefederation* defederation )
GType   lasso_defederation_get_type (  )
gint   lasso_defederation_init_notification ( LassoDefederation* defederation, gchar* remote_providerID, LassoHttpMethod http_method )
LassoDefederation*   lasso_defederation_new ( LassoServer* server )
gint   lasso_defederation_process_notification_msg ( LassoDefederation* defederation, gchar* notification_msg )
gint   lasso_defederation_validate_notification ( LassoDefederation* defederation )
GType   lasso_ds_key_info_get_type (  )
LassoDsKeyInfo*   lasso_ds_key_info_new (  )
GType   lasso_ds_key_value_get_type (  )
LassoDsKeyValue*   lasso_ds_key_value_new (  )
GType   lasso_ds_rsa_key_value_get_type (  )
LassoDsRsaKeyValue*   lasso_ds_rsa_key_value_new (  )
None   lasso_ecp_destroy ( LassoEcp* ecp )
GType   lasso_ecp_get_type (  )
LassoEcp*   lasso_ecp_new ( LassoServer* server )
int   lasso_ecp_process_authn_request_msg ( LassoEcp* ecp, const char* authn_request_msg )
int   lasso_ecp_process_response_msg ( LassoEcp* ecp, const char* response_msg )
None   lasso_federation_build_local_name_identifier ( LassoFederation* federation, const gchar* nameQualifier, const gchar* format, const gchar* content )
None   lasso_federation_destroy ( LassoFederation* federation )
GType   lasso_federation_get_type (  )
LassoFederation*   lasso_federation_new ( gchar* remote_providerID )
gboolean   lasso_federation_verify_name_identifier ( LassoFederation* federation, LassoNode* name_identifier )
char*   lasso_get_prefix_for_dst_service_href ( const char* href )
gchar*   lasso_get_prefix_for_idwsf2_dst_service_href ( const gchar* href )
None   lasso_identity_destroy ( LassoIdentity* identity )
gchar*   lasso_identity_dump ( LassoIdentity* identity )
LassoFederation*   lasso_identity_get_federation ( LassoIdentity* identity, const char* providerID )
GType   lasso_identity_get_type (  )
LassoIdentity*   lasso_identity_new (  )
LassoIdentity*   lasso_identity_new_from_dump ( const gchar* dump )
int   lasso_init (  )
int   lasso_lecp_build_authn_request_envelope_msg ( LassoLecp* lecp )
int   lasso_lecp_build_authn_request_msg ( LassoLecp* lecp )
int   lasso_lecp_build_authn_response_envelope_msg ( LassoLecp* lecp )
int   lasso_lecp_build_authn_response_msg ( LassoLecp* lecp )
None   lasso_lecp_destroy ( LassoLecp* lecp )
GType   lasso_lecp_get_type (  )
int   lasso_lecp_init_authn_request ( LassoLecp* lecp, const char* remote_providerID )
LassoLecp*   lasso_lecp_new ( LassoServer* server )
int   lasso_lecp_process_authn_request_envelope_msg ( LassoLecp* lecp, const char* request_msg )
int   lasso_lecp_process_authn_request_msg ( LassoLecp* lecp, const char* authn_request_msg )
int   lasso_lecp_process_authn_response_envelope_msg ( LassoLecp* lecp, const char* response_msg )
GType   lasso_lib_assertion_get_type (  )
LassoLibAssertion*   lasso_lib_assertion_new (  )
LassoLibAssertion*   lasso_lib_assertion_new_full ( const char* issuer, const char* requestID, const char* audience, const char* notBefore, const char* notOnOrAfter )
GType   lasso_lib_authentication_statement_get_type (  )
LassoLibAuthenticationStatement*   lasso_lib_authentication_statement_new (  )
LassoLibAuthenticationStatement*   lasso_lib_authentication_statement_new_full ( const char* authenticationMethod, const char* authenticationInstant, const char* reauthenticateOnOrAfter, LassoSamlNameIdentifier* sp_identifier, LassoSamlNameIdentifier* idp_identifier )
GType   lasso_lib_authn_context_get_type (  )
LassoNode*   lasso_lib_authn_context_new (  )
GType   lasso_lib_authn_request_envelope_get_type (  )
LassoLibAuthnRequestEnvelope*   lasso_lib_authn_request_envelope_new (  )
LassoLibAuthnRequestEnvelope*   lasso_lib_authn_request_envelope_new_full ( LassoLibAuthnRequest* authnRequest, char* providerID, char* assertionConsumerServiceURL )
GType   lasso_lib_authn_request_get_type (  )
LassoLibAuthnRequest*   lasso_lib_authn_request_new (  )
GType   lasso_lib_authn_response_envelope_get_type (  )
LassoLibAuthnResponseEnvelope*   lasso_lib_authn_response_envelope_new ( LassoLibAuthnResponse* response, char* assertionConsumerServiceURL )
GType   lasso_lib_authn_response_get_type (  )
LassoNode*   lasso_lib_authn_response_new ( char* providerID, LassoLibAuthnRequest* request )
GType   lasso_lib_federation_termination_notification_get_type (  )
LassoNode*   lasso_lib_federation_termination_notification_new (  )
LassoLibFederationTerminationNotification*   lasso_lib_federation_termination_notification_new_full ( char* providerID, LassoSamlNameIdentifier* nameIdentifier, LassoSignatureType sign_type, LassoSignatureMethod sign_method )
GType   lasso_lib_idp_entries_get_type (  )
LassoNode*   lasso_lib_idp_entries_new (  )
GType   lasso_lib_idp_entry_get_type (  )
LassoNode*   lasso_lib_idp_entry_new (  )
GType   lasso_lib_idp_list_get_type (  )
LassoNode*   lasso_lib_idp_list_new (  )
GType   lasso_lib_logout_request_get_type (  )
LassoNode*   lasso_lib_logout_request_new (  )
LassoLibLogoutRequest*   lasso_lib_logout_request_new_full ( char* providerID, LassoSamlNameIdentifier* nameIdentifier, LassoSignatureType sign_type, LassoSignatureMethod sign_method )
GType   lasso_lib_logout_response_get_type (  )
LassoNode*   lasso_lib_logout_response_new (  )
LassoLibLogoutResponse*   lasso_lib_logout_response_new_full ( char* providerID, const char* statusCodeValue, LassoLibLogoutRequest* request, LassoSignatureType sign_type, LassoSignatureMethod sign_method )
GType   lasso_lib_name_identifier_mapping_request_get_type (  )
LassoNode*   lasso_lib_name_identifier_mapping_request_new (  )
LassoLibNameIdentifierMappingRequest*   lasso_lib_name_identifier_mapping_request_new_full ( char* providerID, LassoSamlNameIdentifier* nameIdentifier, const char* targetNamespace, LassoSignatureType sign_type, LassoSignatureMethod sign_method )
GType   lasso_lib_name_identifier_mapping_response_get_type (  )
LassoNode*   lasso_lib_name_identifier_mapping_response_new (  )
LassoLibNameIdentifierMappingResponse*   lasso_lib_name_identifier_mapping_response_new_full ( char* provideRID, const char* statusCodeValue, LassoLibNameIdentifierMappingRequest* request, LassoSignatureType sign_type, LassoSignatureMethod sign_method )
GType   lasso_lib_register_name_identifier_request_get_type (  )
LassoNode*   lasso_lib_register_name_identifier_request_new (  )
LassoLibRegisterNameIdentifierRequest*   lasso_lib_register_name_identifier_request_new_full ( const char* providerID, LassoSamlNameIdentifier* idpNameIdentifier, LassoSamlNameIdentifier* spNameIdentifier, LassoSamlNameIdentifier* oldNameIdentifier, LassoSignatureType sign_type, LassoSignatureMethod sign_method )
GType   lasso_lib_register_name_identifier_response_get_type (  )
LassoNode*   lasso_lib_register_name_identifier_response_new (  )
LassoLibRegisterNameIdentifierResponse*   lasso_lib_register_name_identifier_response_new_full ( const char* providerID, const char* statusCodeValue, LassoLibRegisterNameIdentifierRequest* request, LassoSignatureType sign_type, LassoSignatureMethod sign_method )
GType   lasso_lib_request_authn_context_get_type (  )
LassoLibRequestAuthnContext*   lasso_lib_request_authn_context_new (  )
GType   lasso_lib_scoping_get_type (  )
LassoLibScoping*   lasso_lib_scoping_new (  )
GType   lasso_lib_status_response_get_type (  )
LassoNode*   lasso_lib_status_response_new (  )
GType   lasso_lib_subject_get_type (  )
LassoLibSubject*   lasso_lib_subject_new (  )
gint   lasso_login_accept_sso ( LassoLogin* login )
gint   lasso_login_build_artifact_msg ( LassoLogin* login, LassoHttpMethod http_method )
int   lasso_login_build_assertion ( LassoLogin* login, const char* authenticationMethod, const char* authenticationInstant, const char* reauthenticateOnOrAfter, const char* notBefore, const char* notOnOrAfter )
gint   lasso_login_build_authn_request_msg ( LassoLogin* login )
gint   lasso_login_build_authn_response_msg ( LassoLogin* login )
gint   lasso_login_build_request_msg ( LassoLogin* login )
gint   lasso_login_build_response_msg ( LassoLogin* login, gchar* remote_providerID )
None   lasso_login_destroy ( LassoLogin* login )
gchar*   lasso_login_dump ( LassoLogin* login )
LassoNode*   lasso_login_get_assertion ( LassoLogin* login )
GType   lasso_login_get_type (  )
gint   lasso_login_init_authn_request ( LassoLogin* login, const gchar* remote_providerID, LassoHttpMethod http_method )
gint   lasso_login_init_idp_initiated_authn_request ( LassoLogin* login, const gchar* remote_providerID )
gint   lasso_login_init_request ( LassoLogin* login, gchar* response_msg, LassoHttpMethod response_http_method )
gboolean   lasso_login_must_ask_for_consent ( LassoLogin* login )
gboolean   lasso_login_must_authenticate ( LassoLogin* login )
LassoLogin*   lasso_login_new ( LassoServer* server )
LassoLogin*   lasso_login_new_from_dump ( LassoServer* server, const gchar* dump )
int   lasso_login_process_authn_request_msg ( LassoLogin* login, const char* authn_request_msg )
gint   lasso_login_process_authn_response_msg ( LassoLogin* login, gchar* authn_response_msg )
int   lasso_login_process_paos_response_msg ( LassoLogin* login, gchar* msg )
gint   lasso_login_process_request_msg ( LassoLogin* login, gchar* request_msg )
gint   lasso_login_process_response_msg ( LassoLogin* login, gchar* response_msg )
int   lasso_login_validate_request_msg ( LassoLogin* login, gboolean authentication_result, gboolean is_consent_obtained )
gint   lasso_logout_build_request_msg ( LassoLogout* logout )
gint   lasso_logout_build_response_msg ( LassoLogout* logout )
None   lasso_logout_destroy ( LassoLogout* logout )
gchar*   lasso_logout_dump ( LassoLogout* logout )
gchar*   lasso_logout_get_next_providerID ( LassoLogout* logout )
GType   lasso_logout_get_type (  )
gint   lasso_logout_init_request ( LassoLogout* logout, gchar* remote_providerID, LassoHttpMethod request_method )
LassoLogout*   lasso_logout_new ( LassoServer* server )
LassoLogout*   lasso_logout_new_from_dump ( LassoServer* server, const gchar* dump )
gint   lasso_logout_process_request_msg ( LassoLogout* logout, gchar* request_msg )
gint   lasso_logout_process_response_msg ( LassoLogout* logout, gchar* response_msg )
gint   lasso_logout_reset_providerID_index ( LassoLogout* logout )
gint   lasso_logout_validate_request ( LassoLogout* logout )
GType   lasso_misc_text_node_get_type (  )
xmlNode*   lasso_misc_text_node_get_xml_content ( LassoMiscTextNode* misc_text_node )
LassoNode*   lasso_misc_text_node_new (  )
LassoMiscTextNode*   lasso_misc_text_node_new_with_string ( const char* content )
LassoMiscTextNode*   lasso_misc_text_node_new_with_xml_node ( xmlNode* xml_node )
None   lasso_misc_text_node_set_xml_content ( LassoMiscTextNode* misc_text_node, xmlNode* node )
gint   lasso_name_id_management_build_request_msg ( LassoNameIdManagement* name_id_management )
int   lasso_name_id_management_build_response_msg ( LassoNameIdManagement* name_id_management )
None   lasso_name_id_management_destroy ( LassoNameIdManagement* name_id_management )
char*   lasso_name_id_management_dump ( LassoNameIdManagement* name_id_management )
GType   lasso_name_id_management_get_type (  )
gint   lasso_name_id_management_init_request ( LassoNameIdManagement* name_id_management, char* remote_provider_id, char* new_name_id, LassoHttpMethod http_method )
LassoNameIdManagement*   lasso_name_id_management_new ( LassoServer* server )
LassoNameIdManagement*   lasso_name_id_management_new_from_dump ( LassoServer* server, const char* dump )
gint   lasso_name_id_management_process_request_msg ( LassoNameIdManagement* name_id_management, gchar* request_msg )
gint   lasso_name_id_management_process_response_msg ( LassoNameIdManagement* name_id_management, gchar* response_msg )
gint   lasso_name_id_management_validate_request ( LassoNameIdManagement* name_id_management )
gint   lasso_name_identifier_mapping_build_request_msg ( LassoNameIdentifierMapping* mapping )
gint   lasso_name_identifier_mapping_build_response_msg ( LassoNameIdentifierMapping* mapping )
None   lasso_name_identifier_mapping_destroy ( LassoNameIdentifierMapping* mapping )
GType   lasso_name_identifier_mapping_get_type (  )
gint   lasso_name_identifier_mapping_init_request ( LassoNameIdentifierMapping* mapping, gchar* targetNamespace, gchar* remote_providerID )
LassoNameIdentifierMapping*   lasso_name_identifier_mapping_new ( LassoServer* server )
gint   lasso_name_identifier_mapping_process_request_msg ( LassoNameIdentifierMapping* mapping, gchar* request_msg )
gint   lasso_name_identifier_mapping_process_response_msg ( LassoNameIdentifierMapping* mapping, gchar* response_msg )
gint   lasso_name_identifier_mapping_validate_request ( LassoNameIdentifierMapping* mapping )
gint   lasso_name_registration_build_request_msg ( LassoNameRegistration* name_registration )
gint   lasso_name_registration_build_response_msg ( LassoNameRegistration* name_registration )
None   lasso_name_registration_destroy ( LassoNameRegistration* name_registration )
gchar*   lasso_name_registration_dump ( LassoNameRegistration* name_registration )
GType   lasso_name_registration_get_type (  )
gint   lasso_name_registration_init_request ( LassoNameRegistration* name_registration, char* remote_providerID, LassoHttpMethod http_method )
LassoNameRegistration*   lasso_name_registration_new ( LassoServer* server )
LassoNameRegistration*   lasso_name_registration_new_from_dump ( LassoServer* server, const char* dump )
gint   lasso_name_registration_process_request_msg ( LassoNameRegistration* name_registration, gchar* request_msg )
gint   lasso_name_registration_process_response_msg ( LassoNameRegistration* name_registration, gchar* response_msg )
gint   lasso_name_registration_validate_request ( LassoNameRegistration* name_registration )
None   lasso_node_cleanup_original_xmlnodes ( LassoNode* node )
None   lasso_node_destroy ( LassoNode* node )
char*   lasso_node_dump ( LassoNode* node )
char*   lasso_node_export_to_base64 ( LassoNode* node )
char*   lasso_node_export_to_ecp_soap_response ( LassoNode* node, const char* assertionConsumerURL )
char*   lasso_node_export_to_paos_request ( LassoNode* node, const char* issuer, const char* responseConsumerURL, const char* relay_state )
char*   lasso_node_export_to_query ( LassoNode* node, LassoSignatureMethod sign_method, const char* private_key_file )
char*   lasso_node_export_to_soap ( LassoNode* node )
gchar*   lasso_node_export_to_xml ( LassoNode* node )
const char*   lasso_node_get_name ( LassoNode* node )
xmlNode*   lasso_node_get_original_xmlnode ( LassoNode* node )
GType   lasso_node_get_type (  )
xmlNode*   lasso_node_get_xmlNode ( LassoNode* node, gboolean lasso_dump )
LassoMessageFormat   lasso_node_init_from_message ( LassoNode* node, const char* message )
gboolean   lasso_node_init_from_query ( LassoNode* node, const char* query )
int   lasso_node_init_from_xml ( LassoNode* node, xmlNode* xmlnode )
LassoNode*   lasso_node_new (  )
LassoNode*   lasso_node_new_from_dump ( const char* dump )
LassoNode*   lasso_node_new_from_soap ( const char* soap )
LassoNode*   lasso_node_new_from_xmlNode ( xmlNode* node )
None   lasso_node_set_custom_namespace ( LassoNode* node, char* prefix, char* href )
None   lasso_node_set_custom_nodename ( LassoNode* node, char* nodename )
None   lasso_node_set_original_xmlnode ( LassoNode* node, xmlNode* xmlnode )
char*   lasso_profile_get_artifact ( LassoProfile* profile )
char*   lasso_profile_get_artifact_message ( LassoProfile* profile )
LassoIdentity*   lasso_profile_get_identity ( LassoProfile* profile )
LassoNode*   lasso_profile_get_nameIdentifier ( LassoProfile* profile )
LassoRequestType   lasso_profile_get_request_type_from_soap_msg ( const gchar* soap )
LassoSession*   lasso_profile_get_session ( LassoProfile* profile )
LassoProfileSignatureHint   lasso_profile_get_signature_hint ( LassoProfile* profile )
GType   lasso_profile_get_type (  )
gboolean   lasso_profile_is_identity_dirty ( LassoProfile* profile )
gboolean   lasso_profile_is_liberty_query ( const gchar* query )
gboolean   lasso_profile_is_saml_query ( const gchar* query )
gboolean   lasso_profile_is_session_dirty ( LassoProfile* profile )
None   lasso_profile_set_artifact_message ( LassoProfile* profile, char* message )
gint   lasso_profile_set_identity_from_dump ( LassoProfile* profile, const gchar* dump )
gint   lasso_profile_set_session_from_dump ( LassoProfile* profile, const gchar* dump )
None   lasso_profile_set_signature_hint ( LassoProfile* profile, LassoProfileSignatureHint signature_hint )
gboolean   lasso_provider_accept_http_method ( LassoProvider* provider, const LassoProvider* remote_provider, LassoMdProtocolType protocol_type, LassoHttpMethod http_method, gboolean initiate_profile )
gchar*   lasso_provider_get_assertion_consumer_service_url ( const LassoProvider* provider, const char* service_id )
gchar*   lasso_provider_get_base64_succinct_id ( const LassoProvider* provider )
gchar*   lasso_provider_get_default_name_id_format ( const LassoProvider* provider )
LassoEncryptionMode   lasso_provider_get_encryption_mode ( LassoProvider* provider )
LassoHttpMethod   lasso_provider_get_first_http_method ( LassoProvider* provider, const LassoProvider* remote_provider, LassoMdProtocolType protocol_type )
const GList*   lasso_provider_get_metadata_list ( const LassoProvider* provider, const char* name )
gchar*   lasso_provider_get_metadata_one ( const LassoProvider* provider, const char* name )
xmlNode*   lasso_provider_get_organization ( const LassoProvider* provider )
LassoProtocolConformance   lasso_provider_get_protocol_conformance ( const LassoProvider* provider )
char*   lasso_provider_get_sp_name_qualifier ( LassoProvider* provider )
GType   lasso_provider_get_type (  )
gboolean   lasso_provider_has_protocol_profile ( const LassoProvider* provider, LassoMdProtocolType protocol_type, const char* protocol_profile )
LassoProvider*   lasso_provider_new ( LassoProviderRole role, const char* metadata, const char* public_key, const char* ca_cert_chain )
LassoProvider*   lasso_provider_new_from_buffer ( LassoProviderRole role, const char* metadata, const char* public_key, const char* ca_cert_chain )
LassoProvider*   lasso_provider_new_from_dump ( const gchar* dump )
LassoSaml2EncryptedElement*   lasso_provider_saml2_node_encrypt ( const LassoProvider* provider, LassoNode* lasso_node )
None   lasso_provider_set_encryption_mode ( LassoProvider* provider, LassoEncryptionMode encryption_mode )
None   lasso_provider_set_encryption_sym_key_type ( LassoProvider* provider, LassoEncryptionSymKeyType encryption_sym_key_type )
int   lasso_provider_verify_single_node_signature ( LassoProvider* provider, LassoNode* node, const char* id_attr_name )
None   lasso_register_dst_service ( const char* prefix, const char* href )
None   lasso_register_idwsf2_dst_service ( const gchar* prefix, const gchar* href )
GType   lasso_saml2_action_get_type (  )
LassoNode*   lasso_saml2_action_new (  )
LassoSaml2Action*   lasso_saml2_action_new_with_string ( char* content )
GType   lasso_saml2_advice_get_type (  )
LassoNode*   lasso_saml2_advice_new (  )
int   lasso_saml2_assertion_add_attribute_with_node ( LassoSaml2Assertion* assertion, const char* name, const char* nameformat, LassoNode* content )
None   lasso_saml2_assertion_add_audience_restriction ( LassoSaml2Assertion* saml2_assertion, const char* providerID )
None   lasso_saml2_assertion_add_proxy_limit ( LassoSaml2Assertion* saml2_assertion, int proxy_count, GList* proxy_audiences )
LassoProvider*   lasso_saml2_assertion_get_issuer_provider ( const LassoSaml2Assertion* saml2_assertion, const LassoServer* server )
LassoSaml2SubjectConfirmationData*   lasso_saml2_assertion_get_subject_confirmation_data ( LassoSaml2Assertion* saml2_assertion, gboolean create )
GType   lasso_saml2_assertion_get_type (  )
gboolean   lasso_saml2_assertion_has_audience_restriction ( LassoSaml2Assertion* saml2_assertion )
gboolean   lasso_saml2_assertion_is_audience_restricted ( LassoSaml2Assertion* saml2_assertion, char* providerID )
LassoNode*   lasso_saml2_assertion_new (  )
None   lasso_saml2_assertion_set_basic_conditions ( LassoSaml2Assertion* saml2_assertion, time_t tolerance, time_t length, gboolean one_time_use )
None   lasso_saml2_assertion_set_subject_confirmation_data ( LassoSaml2Assertion* saml2_assertion, time_t tolerance, time_t length, const char* Recipient, const char* InResponseTo, const char* Address )
None   lasso_saml2_assertion_set_subject_confirmation_name_id ( LassoSaml2Assertion* saml2_assertion, LassoNode* node )
None   lasso_saml2_assertion_set_subject_name_id ( LassoSaml2Assertion* saml2_assertion, LassoNode* node )
LassoSaml2AssertionValidationState   lasso_saml2_assertion_validate_conditions ( LassoSaml2Assertion* saml2_assertion, const char* relaying_party_providerID )
GType   lasso_saml2_attribute_get_type (  )
LassoNode*   lasso_saml2_attribute_new (  )
GType   lasso_saml2_attribute_statement_get_type (  )
LassoNode*   lasso_saml2_attribute_statement_new (  )
GType   lasso_saml2_attribute_value_get_type (  )
LassoSaml2AttributeValue*   lasso_saml2_attribute_value_new (  )
GType   lasso_saml2_audience_restriction_get_type (  )
LassoNode*   lasso_saml2_audience_restriction_new (  )
GType   lasso_saml2_authn_context_get_type (  )
LassoNode*   lasso_saml2_authn_context_new (  )
GType   lasso_saml2_authn_statement_get_type (  )
LassoNode*   lasso_saml2_authn_statement_new (  )
GType   lasso_saml2_authz_decision_statement_get_type (  )
LassoNode*   lasso_saml2_authz_decision_statement_new (  )
GType   lasso_saml2_base_idabstract_get_type (  )
LassoNode*   lasso_saml2_base_idabstract_new (  )
GType   lasso_saml2_condition_abstract_get_type (  )
LassoNode*   lasso_saml2_condition_abstract_new (  )
GType   lasso_saml2_conditions_get_type (  )
LassoNode*   lasso_saml2_conditions_new (  )
LassoSaml2EncryptedElement*   lasso_saml2_encrypted_element_build_encrypted_persistent_name_id ( const char* id, const char* idpID, const LassoProvider* provider )
GType   lasso_saml2_encrypted_element_get_type (  )
LassoNode*   lasso_saml2_encrypted_element_new (  )
GType   lasso_saml2_evidence_get_type (  )
LassoNode*   lasso_saml2_evidence_new (  )
GType   lasso_saml2_key_info_confirmation_data_get_type (  )
LassoNode*   lasso_saml2_key_info_confirmation_data_new (  )
LassoSaml2NameID*   lasso_saml2_name_id_build_persistent ( const char* id, const char* idpID, const char* providerID )
gboolean   lasso_saml2_name_id_equals ( LassoSaml2NameID* name_id, LassoSaml2NameID* other_name_id )
GType   lasso_saml2_name_id_get_type (  )
LassoNode*   lasso_saml2_name_id_new (  )
LassoSaml2NameID*   lasso_saml2_name_id_new_with_string ( char* content )
GType   lasso_saml2_one_time_use_get_type (  )
LassoNode*   lasso_saml2_one_time_use_new (  )
GType   lasso_saml2_proxy_restriction_get_type (  )
LassoNode*   lasso_saml2_proxy_restriction_new (  )
GType   lasso_saml2_statement_abstract_get_type (  )
LassoNode*   lasso_saml2_statement_abstract_new (  )
GType   lasso_saml2_subject_confirmation_data_get_type (  )
LassoNode*   lasso_saml2_subject_confirmation_data_new (  )
GType   lasso_saml2_subject_confirmation_get_type (  )
LassoNode*   lasso_saml2_subject_confirmation_new (  )
GType   lasso_saml2_subject_get_type (  )
GType   lasso_saml2_subject_locality_get_type (  )
LassoNode*   lasso_saml2_subject_locality_new (  )
LassoNode*   lasso_saml2_subject_new (  )
GType   lasso_saml_advice_get_type (  )
LassoNode*   lasso_saml_advice_new (  )
GType   lasso_saml_assertion_get_type (  )
LassoSamlAssertion*   lasso_saml_assertion_new (  )
GType   lasso_saml_attribute_designator_get_type (  )
LassoNode*   lasso_saml_attribute_designator_new (  )
GType   lasso_saml_attribute_get_type (  )
LassoSamlAttribute*   lasso_saml_attribute_new (  )
GType   lasso_saml_attribute_statement_get_type (  )
LassoSamlAttributeStatement*   lasso_saml_attribute_statement_new (  )
GType   lasso_saml_attribute_value_get_type (  )
LassoSamlAttributeValue*   lasso_saml_attribute_value_new (  )
GType   lasso_saml_audience_restriction_condition_get_type (  )
LassoSamlAudienceRestrictionCondition*   lasso_saml_audience_restriction_condition_new (  )
LassoSamlAudienceRestrictionCondition*   lasso_saml_audience_restriction_condition_new_full ( const char* audience )
GType   lasso_saml_authentication_statement_get_type (  )
LassoNode*   lasso_saml_authentication_statement_new (  )
GType   lasso_saml_authority_binding_get_type (  )
LassoNode*   lasso_saml_authority_binding_new (  )
GType   lasso_saml_condition_abstract_get_type (  )
GType   lasso_saml_conditions_get_type (  )
LassoSamlConditions*   lasso_saml_conditions_new (  )
GType   lasso_saml_name_identifier_get_type (  )
LassoSamlNameIdentifier*   lasso_saml_name_identifier_new (  )
LassoSamlNameIdentifier*   lasso_saml_name_identifier_new_from_xmlNode ( xmlNode* xmlnode )
GType   lasso_saml_statement_abstract_get_type (  )
GType   lasso_saml_subject_confirmation_get_type (  )
LassoSamlSubjectConfirmation*   lasso_saml_subject_confirmation_new (  )
GType   lasso_saml_subject_get_type (  )
GType   lasso_saml_subject_locality_get_type (  )
LassoNode*   lasso_saml_subject_locality_new (  )
LassoNode*   lasso_saml_subject_new (  )
GType   lasso_saml_subject_statement_abstract_get_type (  )
GType   lasso_saml_subject_statement_get_type (  )
LassoNode*   lasso_saml_subject_statement_new (  )
GType   lasso_samlp2_artifact_resolve_get_type (  )
LassoNode*   lasso_samlp2_artifact_resolve_new (  )
GType   lasso_samlp2_artifact_response_get_type (  )
LassoNode*   lasso_samlp2_artifact_response_new (  )
GType   lasso_samlp2_assertion_id_request_get_type (  )
LassoNode*   lasso_samlp2_assertion_id_request_new (  )
GType   lasso_samlp2_attribute_query_get_type (  )
LassoNode*   lasso_samlp2_attribute_query_new (  )
GType   lasso_samlp2_authn_query_get_type (  )
LassoNode*   lasso_samlp2_authn_query_new (  )
GType   lasso_samlp2_authn_request_get_type (  )
LassoNode*   lasso_samlp2_authn_request_new (  )
GType   lasso_samlp2_authz_decision_query_get_type (  )
LassoNode*   lasso_samlp2_authz_decision_query_new (  )
GType   lasso_samlp2_extensions_get_type (  )
LassoNode*   lasso_samlp2_extensions_new (  )
GType   lasso_samlp2_idp_entry_get_type (  )
LassoNode*   lasso_samlp2_idp_entry_new (  )
GType   lasso_samlp2_idp_list_get_type (  )
LassoNode*   lasso_samlp2_idp_list_new (  )
GType   lasso_samlp2_logout_request_get_type (  )
LassoNode*   lasso_samlp2_logout_request_new (  )
GType   lasso_samlp2_logout_response_get_type (  )
LassoNode*   lasso_samlp2_logout_response_new (  )
GType   lasso_samlp2_manage_name_id_request_get_type (  )
LassoNode*   lasso_samlp2_manage_name_id_request_new (  )
GType   lasso_samlp2_manage_name_id_response_get_type (  )
LassoNode*   lasso_samlp2_manage_name_id_response_new (  )
GType   lasso_samlp2_name_id_mapping_request_get_type (  )
LassoNode*   lasso_samlp2_name_id_mapping_request_new (  )
GType   lasso_samlp2_name_id_mapping_response_get_type (  )
LassoNode*   lasso_samlp2_name_id_mapping_response_new (  )
GType   lasso_samlp2_name_id_policy_get_type (  )
LassoNode*   lasso_samlp2_name_id_policy_new (  )
GType   lasso_samlp2_request_abstract_get_type (  )
LassoNode*   lasso_samlp2_request_abstract_new (  )
GType   lasso_samlp2_requested_authn_context_get_type (  )
LassoNode*   lasso_samlp2_requested_authn_context_new (  )
GType   lasso_samlp2_response_get_type (  )
LassoNode*   lasso_samlp2_response_new (  )
GType   lasso_samlp2_scoping_get_type (  )
LassoNode*   lasso_samlp2_scoping_new (  )
GType   lasso_samlp2_status_code_get_type (  )
LassoNode*   lasso_samlp2_status_code_new (  )
GType   lasso_samlp2_status_detail_get_type (  )
LassoNode*   lasso_samlp2_status_detail_new (  )
GType   lasso_samlp2_status_get_type (  )
LassoNode*   lasso_samlp2_status_new (  )
GType   lasso_samlp2_status_response_get_type (  )
LassoNode*   lasso_samlp2_status_response_new (  )
GType   lasso_samlp2_subject_query_abstract_get_type (  )
LassoNode*   lasso_samlp2_subject_query_abstract_new (  )
GType   lasso_samlp2_terminate_get_type (  )
LassoNode*   lasso_samlp2_terminate_new (  )
GType   lasso_samlp_request_abstract_get_type (  )
GType   lasso_samlp_request_get_type (  )
LassoNode*   lasso_samlp_request_new (  )
None   lasso_samlp_response_abstract_fill ( LassoSamlpResponseAbstract* response, const char* InResponseTo, const char* Recipient )
GType   lasso_samlp_response_abstract_get_type (  )
GType   lasso_samlp_response_get_type (  )
LassoNode*   lasso_samlp_response_new (  )
GType   lasso_samlp_status_code_get_type (  )
LassoSamlpStatusCode*   lasso_samlp_status_code_new (  )
GType   lasso_samlp_status_get_type (  )
LassoSamlpStatus*   lasso_samlp_status_new (  )
gint   lasso_server_add_provider ( LassoServer* server, LassoProviderRole role, const gchar* metadata, const gchar* public_key, const gchar* ca_cert_chain )
gint   lasso_server_add_provider_from_buffer ( LassoServer* server, LassoProviderRole role, const gchar* metadata, const gchar* public_key, const gchar* ca_cert_chain )
None   lasso_server_destroy ( LassoServer* server )
gchar*   lasso_server_dump ( LassoServer* server )
LassoProvider*   lasso_server_get_provider ( const LassoServer* server, const gchar* providerID )
GType   lasso_server_get_type (  )
int   lasso_server_load_affiliation ( LassoServer* server, const gchar* filename )
LassoServer*   lasso_server_new ( const gchar* metadata, const gchar* private_key, const gchar* private_key_password, const gchar* certificate )
LassoServer*   lasso_server_new_from_buffers ( const gchar* metadata, const gchar* private_key, const gchar* private_key_password, const gchar* certificate )
LassoServer*   lasso_server_new_from_dump ( const gchar* dump )
int   lasso_server_saml2_assertion_setup_signature ( LassoServer* server, LassoSaml2Assertion* saml2_assertion )
int   lasso_server_set_encryption_private_key ( LassoServer* server, const gchar* filename )
None   lasso_session_destroy ( LassoSession* session )
gchar*   lasso_session_dump ( LassoSession* session )
GList*   lasso_session_get_assertions ( LassoSession* session, const char* provider_id )
gchar*   lasso_session_get_provider_index ( LassoSession* session, gint index )
GType   lasso_session_get_type (  )
gboolean   lasso_session_is_empty ( LassoSession* session )
LassoSession*   lasso_session_new (  )
LassoSession*   lasso_session_new_from_dump ( const gchar* dump )
None   lasso_set_flag ( char* flag )
int   lasso_shutdown (  )
const char*   lasso_strerror ( int error_code )
